[
    {
        "mutation": 1,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\">"
            }
        ],
        "removed": []
    },
    {
        "mutation": 2,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-mode=\"dynamic\" data-darkreader-scheme=\"dark\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 3,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-mode=\"dynamic\" data-darkreader-scheme=\"dark\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 4,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 5,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 6,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 7,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 8,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 9,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 10,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 11,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 12,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 13,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 14,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 15,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 16,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 17,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(5%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3790f9;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404403 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #795300 !important;\n    border-color: #d6b01b !important;\n    color: #f2e8ca !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #113a47 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #042028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221604 !important;\n}\n.tou-6i3zyv {\n    background-color: #1c576b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 18,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(5%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3790f9;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404403 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #795300 !important;\n    border-color: #d6b01b !important;\n    color: #f2e8ca !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #113a47 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #042028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221604 !important;\n}\n.tou-6i3zyv {\n    background-color: #1c576b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 19,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(5%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3790f9;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404403 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #795300 !important;\n    border-color: #d6b01b !important;\n    color: #f2e8ca !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #113a47 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #042028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221604 !important;\n}\n.tou-6i3zyv {\n    background-color: #1c576b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 20,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 21,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 22,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 23,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 24,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3790f9;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404403 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 25,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3790f9;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404403 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 26,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 27,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 28,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 29,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(5%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 30,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(5%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 31,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 32,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 33,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 34,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #795300 !important;\n    border-color: #d6b01b !important;\n    color: #f2e8ca !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #113a47 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #042028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221604 !important;\n}\n.tou-6i3zyv {\n    background-color: #1c576b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 35,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #795300 !important;\n    border-color: #d6b01b !important;\n    color: #f2e8ca !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #113a47 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #042028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221604 !important;\n}\n.tou-6i3zyv {\n    background-color: #1c576b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 36,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 37,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 38,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 39,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 40,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 41,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 42,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 43,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(10%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3b90f3;\n}\ntable {\n    border-color: #555b5e;\n}\n::placeholder {\n    color: #b1aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404306 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #775300 !important;\n    border-color: #d4b022 !important;\n    color: #f2e8cb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #133946 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #052028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221605 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e5669 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 44,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(10%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3b90f3;\n}\ntable {\n    border-color: #555b5e;\n}\n::placeholder {\n    color: #b1aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404306 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #775300 !important;\n    border-color: #d4b022 !important;\n    color: #f2e8cb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #133946 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #052028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221605 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e5669 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 45,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(10%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3b90f3;\n}\ntable {\n    border-color: #555b5e;\n}\n::placeholder {\n    color: #b1aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404306 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #775300 !important;\n    border-color: #d4b022 !important;\n    color: #f2e8cb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #133946 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #052028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221605 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e5669 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 46,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 47,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 48,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 49,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 50,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3b90f3;\n}\ntable {\n    border-color: #555b5e;\n}\n::placeholder {\n    color: #b1aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404306 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 51,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b5f;\n    color: #e8e6e3;\n}\na {\n    color: #3b90f3;\n}\ntable {\n    border-color: #555b5e;\n}\n::placeholder {\n    color: #b1aba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404306 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 52,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 53,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 54,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 55,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(10%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 56,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(10%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 57,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 58,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 59,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 60,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #775300 !important;\n    border-color: #d4b022 !important;\n    color: #f2e8cb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #133946 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #052028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221605 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e5669 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 61,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #775300 !important;\n    border-color: #d4b022 !important;\n    color: #f2e8cb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #133946 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #052028 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #221605 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e5669 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 62,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 63,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 64,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 65,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 66,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 67,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 68,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 69,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 70,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(15%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b60;\n    color: #e8e6e3;\n}\na {\n    color: #3f8fed;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404309 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #755300 !important;\n    border-color: #d1af2a !important;\n    color: #f1e8cd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #143945 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #071f27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #211606 !important;\n}\n.tou-6i3zyv {\n    background-color: #215567 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 71,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(15%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b60;\n    color: #e8e6e3;\n}\na {\n    color: #3f8fed;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404309 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #755300 !important;\n    border-color: #d1af2a !important;\n    color: #f1e8cd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #143945 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #071f27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #211606 !important;\n}\n.tou-6i3zyv {\n    background-color: #215567 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 72,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(15%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b60;\n    color: #e8e6e3;\n}\na {\n    color: #3f8fed;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404309 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #755300 !important;\n    border-color: #d1af2a !important;\n    color: #f1e8cd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #143945 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #071f27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #211606 !important;\n}\n.tou-6i3zyv {\n    background-color: #215567 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 73,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 74,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 75,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 76,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 77,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b60;\n    color: #e8e6e3;\n}\na {\n    color: #3f8fed;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404309 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 78,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b60;\n    color: #e8e6e3;\n}\na {\n    color: #3f8fed;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404309 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 79,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 80,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 81,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 82,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(15%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 83,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(15%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 84,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 85,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 86,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 87,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #755300 !important;\n    border-color: #d1af2a !important;\n    color: #f1e8cd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #143945 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #071f27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #211606 !important;\n}\n.tou-6i3zyv {\n    background-color: #215567 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 88,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #755300 !important;\n    border-color: #d1af2a !important;\n    color: #f1e8cd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #143945 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #071f27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #211606 !important;\n}\n.tou-6i3zyv {\n    background-color: #215567 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 89,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 90,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 91,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 92,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 93,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 94,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 95,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 96,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 97,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(20%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b61;\n    color: #e8e6e4;\n}\na {\n    color: #438fe7;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40430c !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #735300 !important;\n    border-color: #cfaf32 !important;\n    color: #f1e8ce !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #163944 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #081f26 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201607 !important;\n}\n.tou-6i3zyv {\n    background-color: #235566 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 98,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(20%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b61;\n    color: #e8e6e4;\n}\na {\n    color: #438fe7;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40430c !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #735300 !important;\n    border-color: #cfaf32 !important;\n    color: #f1e8ce !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #163944 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #081f26 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201607 !important;\n}\n.tou-6i3zyv {\n    background-color: #235566 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 99,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(20%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b61;\n    color: #e8e6e4;\n}\na {\n    color: #438fe7;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40430c !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #735300 !important;\n    border-color: #cfaf32 !important;\n    color: #f1e8ce !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #163944 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #081f26 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201607 !important;\n}\n.tou-6i3zyv {\n    background-color: #235566 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 100,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 101,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 102,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 103,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 104,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b61;\n    color: #e8e6e4;\n}\na {\n    color: #438fe7;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40430c !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 105,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #726b61;\n    color: #e8e6e4;\n}\na {\n    color: #438fe7;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b1aba3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40430c !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 106,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 107,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 108,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 109,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(20%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 110,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(20%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 111,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 112,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 113,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 114,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #735300 !important;\n    border-color: #cfaf32 !important;\n    color: #f1e8ce !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #163944 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #081f26 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201607 !important;\n}\n.tou-6i3zyv {\n    background-color: #235566 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 115,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #735300 !important;\n    border-color: #cfaf32 !important;\n    color: #f1e8ce !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #163944 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #081f26 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201607 !important;\n}\n.tou-6i3zyv {\n    background-color: #235566 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 116,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 117,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 118,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 119,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 120,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 121,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 122,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 123,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(25%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b61;\n    color: #e8e6e4;\n}\na {\n    color: #478ee0;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404310 !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #715305 !important;\n    border-color: #cdaf39 !important;\n    color: #f0e8d0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #183843 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #091f25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201608 !important;\n}\n.tou-6i3zyv {\n    background-color: #265464 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 124,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(25%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b61;\n    color: #e8e6e4;\n}\na {\n    color: #478ee0;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404310 !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #715305 !important;\n    border-color: #cdaf39 !important;\n    color: #f0e8d0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #183843 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #091f25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201608 !important;\n}\n.tou-6i3zyv {\n    background-color: #265464 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 125,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(25%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b61;\n    color: #e8e6e4;\n}\na {\n    color: #478ee0;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404310 !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #715305 !important;\n    border-color: #cdaf39 !important;\n    color: #f0e8d0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #183843 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #091f25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201608 !important;\n}\n.tou-6i3zyv {\n    background-color: #265464 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 126,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 127,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 128,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 129,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 130,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b61;\n    color: #e8e6e4;\n}\na {\n    color: #478ee0;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404310 !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 131,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b61;\n    color: #e8e6e4;\n}\na {\n    color: #478ee0;\n}\ntable {\n    border-color: #555b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404310 !important;\n    color: #e8e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 132,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 133,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 134,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 135,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(25%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 136,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(25%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 137,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 138,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 139,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 140,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #715305 !important;\n    border-color: #cdaf39 !important;\n    color: #f0e8d0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #183843 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #091f25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201608 !important;\n}\n.tou-6i3zyv {\n    background-color: #265464 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 141,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #715305 !important;\n    border-color: #cdaf39 !important;\n    color: #f0e8d0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #183843 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #091f25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #201608 !important;\n}\n.tou-6i3zyv {\n    background-color: #265464 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 142,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 143,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d0;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 144,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 145,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 146,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 147,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 148,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 149,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(30%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b62;\n    color: #e7e6e4;\n}\na {\n    color: #4c8dda;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4213 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f530a !important;\n    border-color: #cbaf41 !important;\n    color: #f0e8d2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a3841 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0a1e25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f1609 !important;\n}\n.tou-6i3zyv {\n    background-color: #285462 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 150,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(30%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b62;\n    color: #e7e6e4;\n}\na {\n    color: #4c8dda;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4213 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f530a !important;\n    border-color: #cbaf41 !important;\n    color: #f0e8d2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a3841 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0a1e25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f1609 !important;\n}\n.tou-6i3zyv {\n    background-color: #285462 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 151,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(30%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b62;\n    color: #e7e6e4;\n}\na {\n    color: #4c8dda;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4213 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f530a !important;\n    border-color: #cbaf41 !important;\n    color: #f0e8d2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a3841 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0a1e25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f1609 !important;\n}\n.tou-6i3zyv {\n    background-color: #285462 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 152,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 153,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 154,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 155,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 156,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b62;\n    color: #e7e6e4;\n}\na {\n    color: #4c8dda;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4213 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 157,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #716b62;\n    color: #e7e6e4;\n}\na {\n    color: #4c8dda;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4213 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 158,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 159,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 160,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 161,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(30%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 162,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(30%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 163,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 164,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 165,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 166,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f530a !important;\n    border-color: #cbaf41 !important;\n    color: #f0e8d2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a3841 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0a1e25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f1609 !important;\n}\n.tou-6i3zyv {\n    background-color: #285462 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 167,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f530a !important;\n    border-color: #cbaf41 !important;\n    color: #f0e8d2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a3841 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0a1e25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f1609 !important;\n}\n.tou-6i3zyv {\n    background-color: #285462 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 168,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 169,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 170,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 171,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 172,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 173,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 174,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 175,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 176,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(35%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1b;\n}\nhtml, body {\n    border-color: #706b63;\n    color: #e7e6e4;\n}\na {\n    color: #508dd4;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4216 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d530f !important;\n    border-color: #c9af49 !important;\n    color: #efe8d3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1b3740 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0b1e24 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f160a !important;\n}\n.tou-6i3zyv {\n    background-color: #2b5361 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 177,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(35%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1b;\n}\nhtml, body {\n    border-color: #706b63;\n    color: #e7e6e4;\n}\na {\n    color: #508dd4;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4216 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d530f !important;\n    border-color: #c9af49 !important;\n    color: #efe8d3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1b3740 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0b1e24 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f160a !important;\n}\n.tou-6i3zyv {\n    background-color: #2b5361 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 178,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(35%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1b;\n}\nhtml, body {\n    border-color: #706b63;\n    color: #e7e6e4;\n}\na {\n    color: #508dd4;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4216 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d530f !important;\n    border-color: #c9af49 !important;\n    color: #efe8d3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1b3740 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0b1e24 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f160a !important;\n}\n.tou-6i3zyv {\n    background-color: #2b5361 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 179,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 180,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 181,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 182,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 183,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1b;\n}\nhtml, body {\n    border-color: #706b63;\n    color: #e7e6e4;\n}\na {\n    color: #508dd4;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4216 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 184,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1b;\n}\nhtml, body {\n    border-color: #706b63;\n    color: #e7e6e4;\n}\na {\n    color: #508dd4;\n}\ntable {\n    border-color: #565b5d;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4216 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 185,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 186,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 187,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 188,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(35%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 189,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(35%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 190,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 191,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 192,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 193,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d530f !important;\n    border-color: #c9af49 !important;\n    color: #efe8d3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1b3740 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0b1e24 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f160a !important;\n}\n.tou-6i3zyv {\n    background-color: #2b5361 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 194,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d530f !important;\n    border-color: #c9af49 !important;\n    color: #efe8d3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1b3740 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0b1e24 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1f160a !important;\n}\n.tou-6i3zyv {\n    background-color: #2b5361 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 195,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 196,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 197,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141516;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 198,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 199,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 200,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 201,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 202,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 203,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #548cce;\n}\ntable {\n    border-color: #565a5c;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4219 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c5415 !important;\n    border-color: #c7af51 !important;\n    color: #efe8d5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1d373f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0c1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160b !important;\n}\n.tou-6i3zyv {\n    background-color: #2d525f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 204,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #548cce;\n}\ntable {\n    border-color: #565a5c;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4219 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c5415 !important;\n    border-color: #c7af51 !important;\n    color: #efe8d5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1d373f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0c1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160b !important;\n}\n.tou-6i3zyv {\n    background-color: #2d525f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 205,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #548cce;\n}\ntable {\n    border-color: #565a5c;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4219 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c5415 !important;\n    border-color: #c7af51 !important;\n    color: #efe8d5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1d373f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0c1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160b !important;\n}\n.tou-6i3zyv {\n    background-color: #2d525f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 206,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 207,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 208,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 209,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 210,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #548cce;\n}\ntable {\n    border-color: #565a5c;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4219 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 211,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #548cce;\n}\ntable {\n    border-color: #565a5c;\n}\n::placeholder {\n    color: #b0aba5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4219 !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 212,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 213,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 214,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 215,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(40%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 216,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(40%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 217,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 218,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 219,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 220,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c5415 !important;\n    border-color: #c7af51 !important;\n    color: #efe8d5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1d373f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0c1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160b !important;\n}\n.tou-6i3zyv {\n    background-color: #2d525f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 221,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c5415 !important;\n    border-color: #c7af51 !important;\n    color: #efe8d5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1d373f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0c1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160b !important;\n}\n.tou-6i3zyv {\n    background-color: #2d525f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 222,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 223,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 224,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d7d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 225,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 226,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 227,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 228,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 229,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 230,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #588cc8;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411c !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a541a !important;\n    border-color: #c5af58 !important;\n    color: #eee8d6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1f363e !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160c !important;\n}\n.tou-6i3zyv {\n    background-color: #30525d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 231,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #588cc8;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411c !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a541a !important;\n    border-color: #c5af58 !important;\n    color: #eee8d6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1f363e !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160c !important;\n}\n.tou-6i3zyv {\n    background-color: #30525d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 232,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #588cc8;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411c !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a541a !important;\n    border-color: #c5af58 !important;\n    color: #eee8d6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1f363e !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160c !important;\n}\n.tou-6i3zyv {\n    background-color: #30525d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 233,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 234,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 235,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 236,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 237,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #588cc8;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411c !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 238,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #706b64;\n    color: #e7e6e4;\n}\na {\n    color: #588cc8;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411c !important;\n    color: #e7e6e4 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 239,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 240,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 241,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 242,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(45%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 243,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(45%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 244,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 245,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 246,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 247,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a541a !important;\n    border-color: #c5af58 !important;\n    color: #eee8d6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1f363e !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160c !important;\n}\n.tou-6i3zyv {\n    background-color: #30525d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 248,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a541a !important;\n    border-color: #c5af58 !important;\n    color: #eee8d6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1f363e !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1e23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1e160c !important;\n}\n.tou-6i3zyv {\n    background-color: #30525d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 249,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 250,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 251,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d1;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 252,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 253,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 254,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 255,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 256,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 257,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b65;\n    color: #e7e6e5;\n}\na {\n    color: #5c8bc2;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #68541f !important;\n    border-color: #c2ae60 !important;\n    color: #ede8d8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #21363d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0f1d22 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1d160d !important;\n}\n.tou-6i3zyv {\n    background-color: #32515c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 258,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b65;\n    color: #e7e6e5;\n}\na {\n    color: #5c8bc2;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #68541f !important;\n    border-color: #c2ae60 !important;\n    color: #ede8d8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #21363d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0f1d22 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1d160d !important;\n}\n.tou-6i3zyv {\n    background-color: #32515c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 259,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b65;\n    color: #e7e6e5;\n}\na {\n    color: #5c8bc2;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #68541f !important;\n    border-color: #c2ae60 !important;\n    color: #ede8d8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #21363d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0f1d22 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1d160d !important;\n}\n.tou-6i3zyv {\n    background-color: #32515c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 260,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 261,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 262,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 263,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 264,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b65;\n    color: #e7e6e5;\n}\na {\n    color: #5c8bc2;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 265,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b65;\n    color: #e7e6e5;\n}\na {\n    color: #5c8bc2;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f411f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 266,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 267,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 268,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 269,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(50%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 270,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(50%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 271,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 272,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 273,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 274,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #68541f !important;\n    border-color: #c2ae60 !important;\n    color: #ede8d8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #21363d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0f1d22 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1d160d !important;\n}\n.tou-6i3zyv {\n    background-color: #32515c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 275,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #68541f !important;\n    border-color: #c2ae60 !important;\n    color: #ede8d8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #21363d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0f1d22 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1d160d !important;\n}\n.tou-6i3zyv {\n    background-color: #32515c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 276,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 277,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 278,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 279,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 280,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 281,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 282,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 283,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 284,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #608abc;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4122 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665424 !important;\n    border-color: #c0ae68 !important;\n    color: #ede8da !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #22363c !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #101d21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #35515a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 285,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #608abc;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4122 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665424 !important;\n    border-color: #c0ae68 !important;\n    color: #ede8da !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #22363c !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #101d21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #35515a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 286,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #608abc;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4122 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665424 !important;\n    border-color: #c0ae68 !important;\n    color: #ede8da !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #22363c !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #101d21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #35515a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 287,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 288,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 289,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 290,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 291,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #608abc;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4122 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 292,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #608abc;\n}\ntable {\n    border-color: #575a5c;\n}\n::placeholder {\n    color: #afaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4122 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 293,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 294,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 295,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 296,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(55%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 297,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(55%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 298,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 299,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 300,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 301,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665424 !important;\n    border-color: #c0ae68 !important;\n    color: #ede8da !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #22363c !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #101d21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #35515a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 302,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665424 !important;\n    border-color: #c0ae68 !important;\n    color: #ede8da !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #22363c !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #101d21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #35515a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 303,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 304,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 305,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 306,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 307,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 308,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 309,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 310,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #648ab6;\n}\ntable {\n    border-color: #575a5b;\n}\n::placeholder {\n    color: #aeaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4125 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #64542a !important;\n    border-color: #beae6f !important;\n    color: #ece8db !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #24353b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #111d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170f !important;\n}\n.tou-6i3zyv {\n    background-color: #375059 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 311,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #648ab6;\n}\ntable {\n    border-color: #575a5b;\n}\n::placeholder {\n    color: #aeaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4125 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #64542a !important;\n    border-color: #beae6f !important;\n    color: #ece8db !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #24353b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #111d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170f !important;\n}\n.tou-6i3zyv {\n    background-color: #375059 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 312,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #648ab6;\n}\ntable {\n    border-color: #575a5b;\n}\n::placeholder {\n    color: #aeaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4125 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #64542a !important;\n    border-color: #beae6f !important;\n    color: #ece8db !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #24353b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #111d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170f !important;\n}\n.tou-6i3zyv {\n    background-color: #375059 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 313,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 314,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 315,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 316,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 317,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #648ab6;\n}\ntable {\n    border-color: #575a5b;\n}\n::placeholder {\n    color: #aeaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4125 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 318,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6f6b66;\n    color: #e7e6e5;\n}\na {\n    color: #648ab6;\n}\ntable {\n    border-color: #575a5b;\n}\n::placeholder {\n    color: #aeaba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4125 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 319,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 320,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 321,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 322,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(60%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 323,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(60%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 324,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 325,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 326,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 327,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #64542a !important;\n    border-color: #beae6f !important;\n    color: #ece8db !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #24353b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #111d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170f !important;\n}\n.tou-6i3zyv {\n    background-color: #375059 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 328,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #64542a !important;\n    border-color: #beae6f !important;\n    color: #ece8db !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #24353b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #111d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1c170f !important;\n}\n.tou-6i3zyv {\n    background-color: #375059 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 329,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 330,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d2;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 331,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 332,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 333,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 334,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 335,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 336,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6b67;\n    color: #e7e6e5;\n}\na {\n    color: #6889b0;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaba8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4028 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #62542f !important;\n    border-color: #bcae77 !important;\n    color: #ece8dd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26353a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #121d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1710 !important;\n}\n.tou-6i3zyv {\n    background-color: #3a5057 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 337,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6b67;\n    color: #e7e6e5;\n}\na {\n    color: #6889b0;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaba8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4028 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #62542f !important;\n    border-color: #bcae77 !important;\n    color: #ece8dd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26353a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #121d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1710 !important;\n}\n.tou-6i3zyv {\n    background-color: #3a5057 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 338,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6b67;\n    color: #e7e6e5;\n}\na {\n    color: #6889b0;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaba8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4028 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #62542f !important;\n    border-color: #bcae77 !important;\n    color: #ece8dd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26353a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #121d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1710 !important;\n}\n.tou-6i3zyv {\n    background-color: #3a5057 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 339,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 340,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 341,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 342,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 343,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6b67;\n    color: #e7e6e5;\n}\na {\n    color: #6889b0;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaba8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4028 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 344,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6b67;\n    color: #e7e6e5;\n}\na {\n    color: #6889b0;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaba8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f4028 !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 345,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 346,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 347,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 348,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(65%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 349,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(65%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 350,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 351,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 352,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 353,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #62542f !important;\n    border-color: #bcae77 !important;\n    color: #ece8dd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26353a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #121d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1710 !important;\n}\n.tou-6i3zyv {\n    background-color: #3a5057 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 354,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #62542f !important;\n    border-color: #bcae77 !important;\n    color: #ece8dd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26353a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #121d20 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1710 !important;\n}\n.tou-6i3zyv {\n    background-color: #3a5057 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 355,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 356,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 357,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 358,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 359,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 360,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 361,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 362,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 363,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #6c89aa;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402c !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605434 !important;\n    border-color: #baae7f !important;\n    color: #ebe8de !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #283439 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #141c1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1711 !important;\n}\n.tou-6i3zyv {\n    background-color: #3c4f55 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 364,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #6c89aa;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402c !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605434 !important;\n    border-color: #baae7f !important;\n    color: #ebe8de !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #283439 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #141c1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1711 !important;\n}\n.tou-6i3zyv {\n    background-color: #3c4f55 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 365,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #6c89aa;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402c !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605434 !important;\n    border-color: #baae7f !important;\n    color: #ebe8de !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #283439 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #141c1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1711 !important;\n}\n.tou-6i3zyv {\n    background-color: #3c4f55 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 366,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 367,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 368,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 369,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 370,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #6c89aa;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402c !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 371,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #6c89aa;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #aeaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402c !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 372,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 373,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 374,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 375,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(70%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 376,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(70%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 377,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 378,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 379,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 380,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605434 !important;\n    border-color: #baae7f !important;\n    color: #ebe8de !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #283439 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #141c1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1711 !important;\n}\n.tou-6i3zyv {\n    background-color: #3c4f55 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 381,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605434 !important;\n    border-color: #baae7f !important;\n    color: #ebe8de !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #283439 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #141c1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1b1711 !important;\n}\n.tou-6i3zyv {\n    background-color: #3c4f55 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 382,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 383,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d6d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 384,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 385,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 386,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 387,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 388,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 389,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #7088a3;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #adaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e543a !important;\n    border-color: #b8ae87 !important;\n    color: #ebe8e0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #293438 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #151c1e !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1712 !important;\n}\n.tou-6i3zyv {\n    background-color: #3f4e54 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 390,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #7088a3;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #adaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e543a !important;\n    border-color: #b8ae87 !important;\n    color: #ebe8e0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #293438 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #151c1e !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1712 !important;\n}\n.tou-6i3zyv {\n    background-color: #3f4e54 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 391,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #7088a3;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #adaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e543a !important;\n    border-color: #b8ae87 !important;\n    color: #ebe8e0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #293438 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #151c1e !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1712 !important;\n}\n.tou-6i3zyv {\n    background-color: #3f4e54 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 392,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 393,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 394,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 395,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 396,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #7088a3;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #adaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 397,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6e6c68;\n    color: #e7e6e5;\n}\na {\n    color: #7088a3;\n}\ntable {\n    border-color: #585a5b;\n}\n::placeholder {\n    color: #adaca9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f402f !important;\n    color: #e7e6e5 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 398,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 399,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 400,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 401,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(75%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 402,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(75%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 403,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 404,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 405,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 406,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e543a !important;\n    border-color: #b8ae87 !important;\n    color: #ebe8e0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #293438 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #151c1e !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1712 !important;\n}\n.tou-6i3zyv {\n    background-color: #3f4e54 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 407,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e543a !important;\n    border-color: #b8ae87 !important;\n    color: #ebe8e0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #293438 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #151c1e !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1712 !important;\n}\n.tou-6i3zyv {\n    background-color: #3f4e54 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 408,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 409,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 410,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 411,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 412,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 413,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 414,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 415,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 416,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c69;\n    color: #e7e6e6;\n}\na {\n    color: #75879d;\n}\ntable {\n    border-color: #595a5b;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f32 !important;\n    color: #e7e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c543f !important;\n    border-color: #b6ae8e !important;\n    color: #eae8e2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2b3436 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #161c1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191713 !important;\n}\n.tou-6i3zyv {\n    background-color: #414e52 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 417,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c69;\n    color: #e7e6e6;\n}\na {\n    color: #75879d;\n}\ntable {\n    border-color: #595a5b;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f32 !important;\n    color: #e7e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c543f !important;\n    border-color: #b6ae8e !important;\n    color: #eae8e2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2b3436 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #161c1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191713 !important;\n}\n.tou-6i3zyv {\n    background-color: #414e52 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 418,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c69;\n    color: #e7e6e6;\n}\na {\n    color: #75879d;\n}\ntable {\n    border-color: #595a5b;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f32 !important;\n    color: #e7e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c543f !important;\n    border-color: #b6ae8e !important;\n    color: #eae8e2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2b3436 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #161c1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191713 !important;\n}\n.tou-6i3zyv {\n    background-color: #414e52 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 419,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 420,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 421,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 422,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 423,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c69;\n    color: #e7e6e6;\n}\na {\n    color: #75879d;\n}\ntable {\n    border-color: #595a5b;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f32 !important;\n    color: #e7e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 424,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c69;\n    color: #e7e6e6;\n}\na {\n    color: #75879d;\n}\ntable {\n    border-color: #595a5b;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f32 !important;\n    color: #e7e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 425,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 426,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 427,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 428,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(80%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 429,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(80%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 430,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 431,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 432,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 433,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c543f !important;\n    border-color: #b6ae8e !important;\n    color: #eae8e2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2b3436 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #161c1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191713 !important;\n}\n.tou-6i3zyv {\n    background-color: #414e52 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 434,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c543f !important;\n    border-color: #b6ae8e !important;\n    color: #eae8e2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2b3436 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #161c1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191713 !important;\n}\n.tou-6i3zyv {\n    background-color: #414e52 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 435,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 436,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d3;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 437,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 438,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 439,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 440,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 441,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 442,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #798797;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f35 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5444 !important;\n    border-color: #b3ad96 !important;\n    color: #eae8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2d3335 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #171b1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191714 !important;\n}\n.tou-6i3zyv {\n    background-color: #444d50 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 443,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #798797;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f35 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5444 !important;\n    border-color: #b3ad96 !important;\n    color: #eae8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2d3335 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #171b1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191714 !important;\n}\n.tou-6i3zyv {\n    background-color: #444d50 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 444,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #798797;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f35 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5444 !important;\n    border-color: #b3ad96 !important;\n    color: #eae8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2d3335 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #171b1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191714 !important;\n}\n.tou-6i3zyv {\n    background-color: #444d50 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 445,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 446,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 447,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 448,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 449,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #798797;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f35 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 450,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6d6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #798797;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #adacaa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f35 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 451,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 452,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 453,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 454,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(85%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 455,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(85%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 456,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 457,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 458,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 459,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5444 !important;\n    border-color: #b3ad96 !important;\n    color: #eae8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2d3335 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #171b1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191714 !important;\n}\n.tou-6i3zyv {\n    background-color: #444d50 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 460,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5444 !important;\n    border-color: #b3ad96 !important;\n    color: #eae8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2d3335 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #171b1d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191714 !important;\n}\n.tou-6i3zyv {\n    background-color: #444d50 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 461,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 462,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 463,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 464,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 465,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 466,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 467,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 468,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 469,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6c6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #7d8691;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f38 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585449 !important;\n    border-color: #b1ad9e !important;\n    color: #e9e8e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2f3334 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #181b1c !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181715 !important;\n}\n.tou-6i3zyv {\n    background-color: #464d4f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 470,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6c6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #7d8691;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f38 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585449 !important;\n    border-color: #b1ad9e !important;\n    color: #e9e8e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2f3334 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #181b1c !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181715 !important;\n}\n.tou-6i3zyv {\n    background-color: #464d4f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 471,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6c6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #7d8691;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f38 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585449 !important;\n    border-color: #b1ad9e !important;\n    color: #e9e8e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2f3334 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #181b1c !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181715 !important;\n}\n.tou-6i3zyv {\n    background-color: #464d4f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 472,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 473,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 474,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 475,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 476,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6c6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #7d8691;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f38 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 477,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #191a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #191a1a;\n}\nhtml, body {\n    border-color: #6c6c6a;\n    color: #e6e6e6;\n}\na {\n    color: #7d8691;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f38 !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 478,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 479,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 480,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 481,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 482,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 483,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 484,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 485,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 486,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585449 !important;\n    border-color: #b1ad9e !important;\n    color: #e9e8e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2f3334 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #181b1c !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181715 !important;\n}\n.tou-6i3zyv {\n    background-color: #464d4f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 487,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585449 !important;\n    border-color: #b1ad9e !important;\n    color: #e9e8e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2f3334 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #181b1c !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181715 !important;\n}\n.tou-6i3zyv {\n    background-color: #464d4f !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 488,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 489,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #141515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 490,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 491,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 492,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 493,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 494,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 495,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(95%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6b;\n    color: #e6e6e6;\n}\na {\n    color: #81868b;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f3b !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #56544f !important;\n    border-color: #afada5 !important;\n    color: #e9e8e6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #303233 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #191b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181716 !important;\n}\n.tou-6i3zyv {\n    background-color: #494c4d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 496,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(95%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6b;\n    color: #e6e6e6;\n}\na {\n    color: #81868b;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f3b !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #56544f !important;\n    border-color: #afada5 !important;\n    color: #e9e8e6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #303233 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #191b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181716 !important;\n}\n.tou-6i3zyv {\n    background-color: #494c4d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 497,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(95%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6b;\n    color: #e6e6e6;\n}\na {\n    color: #81868b;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f3b !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #56544f !important;\n    border-color: #afada5 !important;\n    color: #e9e8e6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #303233 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #191b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181716 !important;\n}\n.tou-6i3zyv {\n    background-color: #494c4d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 498,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 499,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 500,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 501,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 502,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6b;\n    color: #e6e6e6;\n}\na {\n    color: #81868b;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f3b !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 503,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6b;\n    color: #e6e6e6;\n}\na {\n    color: #81868b;\n}\ntable {\n    border-color: #595a5a;\n}\n::placeholder {\n    color: #acacab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3f3b !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 504,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 505,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 506,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 507,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(95%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 508,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(95%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 509,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 510,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 511,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 512,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #56544f !important;\n    border-color: #afada5 !important;\n    color: #e9e8e6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #303233 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #191b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181716 !important;\n}\n.tou-6i3zyv {\n    background-color: #494c4d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 513,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #56544f !important;\n    border-color: #afada5 !important;\n    color: #e9e8e6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #303233 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #191b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181716 !important;\n}\n.tou-6i3zyv {\n    background-color: #494c4d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 514,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 515,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 516,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d5d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 517,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 518,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 519,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 520,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 521,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 522,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d4d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6c;\n    color: #e6e6e6;\n}\na {\n    color: #858585;\n}\ntable {\n    border-color: #5a5a5a;\n}\n::placeholder {\n    color: #acacac;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3e3e !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #545454 !important;\n    border-color: #adadad !important;\n    color: #e8e8e8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #323232 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #171717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4b4b4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 523,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d4d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6c;\n    color: #e6e6e6;\n}\na {\n    color: #858585;\n}\ntable {\n    border-color: #5a5a5a;\n}\n::placeholder {\n    color: #acacac;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3e3e !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #545454 !important;\n    border-color: #adadad !important;\n    color: #e8e8e8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #323232 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #171717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4b4b4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 524,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d4d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6c;\n    color: #e6e6e6;\n}\na {\n    color: #858585;\n}\ntable {\n    border-color: #5a5a5a;\n}\n::placeholder {\n    color: #acacac;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3e3e !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #545454 !important;\n    border-color: #adadad !important;\n    color: #e8e8e8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #323232 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #171717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4b4b4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 525,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 526,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 527,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 528,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 529,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6c;\n    color: #e6e6e6;\n}\na {\n    color: #858585;\n}\ntable {\n    border-color: #5a5a5a;\n}\n::placeholder {\n    color: #acacac;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3e3e !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 530,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6c6c6c;\n    color: #e6e6e6;\n}\na {\n    color: #858585;\n}\ntable {\n    border-color: #5a5a5a;\n}\n::placeholder {\n    color: #acacac;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3e3e3e !important;\n    color: #e6e6e6 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 531,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 532,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 533,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 534,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 535,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 536,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 537,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 538,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 539,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #545454 !important;\n    border-color: #adadad !important;\n    color: #e8e8e8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #323232 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #171717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4b4b4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 540,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #545454 !important;\n    border-color: #adadad !important;\n    color: #e8e8e8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #323232 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #171717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4b4b4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 541,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 542,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d4d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ]
    },
    {
        "mutation": 543,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d4d4d4;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 544,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 545,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 546,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 547,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 548,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 549,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(5%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d8d7d4;\n   --darkreader-selection-background: #054da5;\n   --darkreader-selection-text: #ece8e2;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6e6d6b;\n    color: #eae9e5;\n}\na {\n    color: #878685;\n}\ntable {\n    border-color: #5b5b59;\n}\n::placeholder {\n    color: #afaeab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f3e !important;\n    color: #eae9e5 !important;\n}\n::selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}\n::-moz-selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #565554 !important;\n    border-color: #b0afad !important;\n    color: #eceae7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #333332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4d4c4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 550,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(5%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d8d7d4;\n   --darkreader-selection-background: #054da5;\n   --darkreader-selection-text: #ece8e2;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6e6d6b;\n    color: #eae9e5;\n}\na {\n    color: #878685;\n}\ntable {\n    border-color: #5b5b59;\n}\n::placeholder {\n    color: #afaeab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f3e !important;\n    color: #eae9e5 !important;\n}\n::selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}\n::-moz-selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #565554 !important;\n    border-color: #b0afad !important;\n    color: #eceae7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #333332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4d4c4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 551,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(5%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d8d7d4;\n   --darkreader-selection-background: #054da5;\n   --darkreader-selection-text: #ece8e2;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6e6d6b;\n    color: #eae9e5;\n}\na {\n    color: #878685;\n}\ntable {\n    border-color: #5b5b59;\n}\n::placeholder {\n    color: #afaeab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f3e !important;\n    color: #eae9e5 !important;\n}\n::selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}\n::-moz-selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #565554 !important;\n    border-color: #b0afad !important;\n    color: #eceae7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #333332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4d4c4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 552,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 553,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 554,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 555,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 556,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6e6d6b;\n    color: #eae9e5;\n}\na {\n    color: #878685;\n}\ntable {\n    border-color: #5b5b59;\n}\n::placeholder {\n    color: #afaeab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f3e !important;\n    color: #eae9e5 !important;\n}\n::selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}\n::-moz-selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 557,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1a1a1a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1a1a1a;\n}\nhtml, body {\n    border-color: #6e6d6b;\n    color: #eae9e5;\n}\na {\n    color: #878685;\n}\ntable {\n    border-color: #5b5b59;\n}\n::placeholder {\n    color: #afaeab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3f3f3e !important;\n    color: #eae9e5 !important;\n}\n::selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}\n::-moz-selection {\n    background-color: #054da5 !important;\n    color: #ece8e2 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 558,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 559,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 560,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 561,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(5%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 562,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(5%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 563,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 564,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 565,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 566,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #565554 !important;\n    border-color: #b0afad !important;\n    color: #eceae7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #333332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4d4c4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 567,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #565554 !important;\n    border-color: #b0afad !important;\n    color: #eceae7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #333332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b1b1b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181717 !important;\n}\n.tou-6i3zyv {\n    background-color: #4d4c4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 568,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 569,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d8d7d4;\n   --darkreader-selection-background: #054da5;\n   --darkreader-selection-text: #ece8e2;\n}</style>"
            }
        ]
    },
    {
        "mutation": 570,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #d8d7d4;\n   --darkreader-selection-background: #054da5;\n   --darkreader-selection-text: #ece8e2;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 571,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 572,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 573,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 574,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 575,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 576,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(10%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #dcd9d3;\n   --darkreader-selection-background: #094d9f;\n   --darkreader-selection-text: #f0ebe2;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #706e6b;\n    color: #eeebe5;\n}\na {\n    color: #8a8884;\n}\ntable {\n    border-color: #5d5c59;\n}\n::placeholder {\n    color: #b2afab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40403e !important;\n    color: #eeebe5 !important;\n}\n::selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}\n::-moz-selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #575654 !important;\n    border-color: #b3b1ac !important;\n    color: #f0ede7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #343332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4e4d4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 577,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(10%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #dcd9d3;\n   --darkreader-selection-background: #094d9f;\n   --darkreader-selection-text: #f0ebe2;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #706e6b;\n    color: #eeebe5;\n}\na {\n    color: #8a8884;\n}\ntable {\n    border-color: #5d5c59;\n}\n::placeholder {\n    color: #b2afab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40403e !important;\n    color: #eeebe5 !important;\n}\n::selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}\n::-moz-selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #575654 !important;\n    border-color: #b3b1ac !important;\n    color: #f0ede7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #343332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4e4d4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 578,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(10%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #dcd9d3;\n   --darkreader-selection-background: #094d9f;\n   --darkreader-selection-text: #f0ebe2;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #706e6b;\n    color: #eeebe5;\n}\na {\n    color: #8a8884;\n}\ntable {\n    border-color: #5d5c59;\n}\n::placeholder {\n    color: #b2afab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40403e !important;\n    color: #eeebe5 !important;\n}\n::selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}\n::-moz-selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #575654 !important;\n    border-color: #b3b1ac !important;\n    color: #f0ede7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #343332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4e4d4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 579,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 580,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 581,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 582,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 583,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #706e6b;\n    color: #eeebe5;\n}\na {\n    color: #8a8884;\n}\ntable {\n    border-color: #5d5c59;\n}\n::placeholder {\n    color: #b2afab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40403e !important;\n    color: #eeebe5 !important;\n}\n::selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}\n::-moz-selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 584,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #706e6b;\n    color: #eeebe5;\n}\na {\n    color: #8a8884;\n}\ntable {\n    border-color: #5d5c59;\n}\n::placeholder {\n    color: #b2afab;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #40403e !important;\n    color: #eeebe5 !important;\n}\n::selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}\n::-moz-selection {\n    background-color: #094d9f !important;\n    color: #f0ebe2 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 585,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 586,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 587,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 588,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(10%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 589,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(10%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 590,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 591,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 592,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 593,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #575654 !important;\n    border-color: #b3b1ac !important;\n    color: #f0ede7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #343332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4e4d4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 594,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #575654 !important;\n    border-color: #b3b1ac !important;\n    color: #f0ede7 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #343332 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4e4d4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 595,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 596,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #dcd9d3;\n   --darkreader-selection-background: #094d9f;\n   --darkreader-selection-text: #f0ebe2;\n}</style>"
            }
        ]
    },
    {
        "mutation": 597,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151515;\n   --darkreader-neutral-text: #dcd9d3;\n   --darkreader-selection-background: #094d9f;\n   --darkreader-selection-text: #f0ebe2;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 598,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 599,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 600,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 601,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 602,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 603,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(15%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e0dbd2;\n   --darkreader-selection-background: #0e4e9a;\n   --darkreader-selection-text: #f4ede1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #716f6b;\n    color: #f2ede4;\n}\na {\n    color: #8c8984;\n}\ntable {\n    border-color: #5e5c59;\n}\n::placeholder {\n    color: #b5b1aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #42403e !important;\n    color: #f2ede4 !important;\n}\n::selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}\n::-moz-selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585753 !important;\n    border-color: #b6b2ab !important;\n    color: #f4efe6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #353432 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4f4e4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 604,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(15%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e0dbd2;\n   --darkreader-selection-background: #0e4e9a;\n   --darkreader-selection-text: #f4ede1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #716f6b;\n    color: #f2ede4;\n}\na {\n    color: #8c8984;\n}\ntable {\n    border-color: #5e5c59;\n}\n::placeholder {\n    color: #b5b1aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #42403e !important;\n    color: #f2ede4 !important;\n}\n::selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}\n::-moz-selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585753 !important;\n    border-color: #b6b2ab !important;\n    color: #f4efe6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #353432 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4f4e4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 605,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(15%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e0dbd2;\n   --darkreader-selection-background: #0e4e9a;\n   --darkreader-selection-text: #f4ede1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #716f6b;\n    color: #f2ede4;\n}\na {\n    color: #8c8984;\n}\ntable {\n    border-color: #5e5c59;\n}\n::placeholder {\n    color: #b5b1aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #42403e !important;\n    color: #f2ede4 !important;\n}\n::selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}\n::-moz-selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585753 !important;\n    border-color: #b6b2ab !important;\n    color: #f4efe6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #353432 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4f4e4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 606,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 607,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 608,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 609,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 610,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #716f6b;\n    color: #f2ede4;\n}\na {\n    color: #8c8984;\n}\ntable {\n    border-color: #5e5c59;\n}\n::placeholder {\n    color: #b5b1aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #42403e !important;\n    color: #f2ede4 !important;\n}\n::selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}\n::-moz-selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 611,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1a19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1a19;\n}\nhtml, body {\n    border-color: #716f6b;\n    color: #f2ede4;\n}\na {\n    color: #8c8984;\n}\ntable {\n    border-color: #5e5c59;\n}\n::placeholder {\n    color: #b5b1aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #42403e !important;\n    color: #f2ede4 !important;\n}\n::selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}\n::-moz-selection {\n    background-color: #0e4e9a !important;\n    color: #f4ede1 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 612,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 613,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 614,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 615,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(15%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 616,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(15%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 617,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 618,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 619,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 620,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585753 !important;\n    border-color: #b6b2ab !important;\n    color: #f4efe6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #353432 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4f4e4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 621,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #585753 !important;\n    border-color: #b6b2ab !important;\n    color: #f4efe6 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #353432 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1b1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #181817 !important;\n}\n.tou-6i3zyv {\n    background-color: #4f4e4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 622,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 623,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e0dbd2;\n   --darkreader-selection-background: #0e4e9a;\n   --darkreader-selection-text: #f4ede1;\n}</style>"
            }
        ]
    },
    {
        "mutation": 624,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e0dbd2;\n   --darkreader-selection-background: #0e4e9a;\n   --darkreader-selection-text: #f4ede1;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 625,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 626,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 627,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 628,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 629,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 630,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(20%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e3ddd2;\n   --darkreader-selection-background: #124e95;\n   --darkreader-selection-text: #f8efe1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1b19;\n}\nhtml, body {\n    border-color: #73706a;\n    color: #f6f0e3;\n}\na {\n    color: #8e8a83;\n}\ntable {\n    border-color: #605d59;\n}\n::placeholder {\n    color: #b8b3aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #43413d !important;\n    color: #f6f0e3 !important;\n}\n::selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}\n::-moz-selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5753 !important;\n    border-color: #b9b4ab !important;\n    color: #f8f1e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363431 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #514f4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 631,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(20%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e3ddd2;\n   --darkreader-selection-background: #124e95;\n   --darkreader-selection-text: #f8efe1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1b19;\n}\nhtml, body {\n    border-color: #73706a;\n    color: #f6f0e3;\n}\na {\n    color: #8e8a83;\n}\ntable {\n    border-color: #605d59;\n}\n::placeholder {\n    color: #b8b3aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #43413d !important;\n    color: #f6f0e3 !important;\n}\n::selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}\n::-moz-selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5753 !important;\n    border-color: #b9b4ab !important;\n    color: #f8f1e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363431 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #514f4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 632,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(20%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e3ddd2;\n   --darkreader-selection-background: #124e95;\n   --darkreader-selection-text: #f8efe1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1b19;\n}\nhtml, body {\n    border-color: #73706a;\n    color: #f6f0e3;\n}\na {\n    color: #8e8a83;\n}\ntable {\n    border-color: #605d59;\n}\n::placeholder {\n    color: #b8b3aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #43413d !important;\n    color: #f6f0e3 !important;\n}\n::selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}\n::-moz-selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5753 !important;\n    border-color: #b9b4ab !important;\n    color: #f8f1e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363431 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #514f4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 633,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 634,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 635,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 636,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 637,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1b19;\n}\nhtml, body {\n    border-color: #73706a;\n    color: #f6f0e3;\n}\na {\n    color: #8e8a83;\n}\ntable {\n    border-color: #605d59;\n}\n::placeholder {\n    color: #b8b3aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #43413d !important;\n    color: #f6f0e3 !important;\n}\n::selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}\n::-moz-selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 638,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1b1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1b1b19;\n}\nhtml, body {\n    border-color: #73706a;\n    color: #f6f0e3;\n}\na {\n    color: #8e8a83;\n}\ntable {\n    border-color: #605d59;\n}\n::placeholder {\n    color: #b8b3aa;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #43413d !important;\n    color: #f6f0e3 !important;\n}\n::selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}\n::-moz-selection {\n    background-color: #124e95 !important;\n    color: #f8efe1 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 639,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 640,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 641,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 642,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(20%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 643,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(20%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 644,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 645,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 646,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 647,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5753 !important;\n    border-color: #b9b4ab !important;\n    color: #f8f1e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363431 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #514f4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 648,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5a5753 !important;\n    border-color: #b9b4ab !important;\n    color: #f8f1e5 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363431 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1c1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #514f4b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 649,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 650,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e3ddd2;\n   --darkreader-selection-background: #124e95;\n   --darkreader-selection-text: #f8efe1;\n}</style>"
            }
        ]
    },
    {
        "mutation": 651,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161514;\n   --darkreader-neutral-text: #e3ddd2;\n   --darkreader-selection-background: #124e95;\n   --darkreader-selection-text: #f8efe1;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 652,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 653,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 654,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 655,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 656,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 657,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(25%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161614;\n   --darkreader-neutral-text: #e7dfd1;\n   --darkreader-selection-background: #174e8f;\n   --darkreader-selection-text: #fcf2e0;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #75716a;\n    color: #faf2e3;\n}\na {\n    color: #918c83;\n}\ntable {\n    border-color: #625e58;\n}\n::placeholder {\n    color: #bbb4a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #44413d !important;\n    color: #faf2e3 !important;\n}\n::selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}\n::-moz-selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5853 !important;\n    border-color: #bcb6aa !important;\n    color: #fcf4e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #524f4a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 658,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(25%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161614;\n   --darkreader-neutral-text: #e7dfd1;\n   --darkreader-selection-background: #174e8f;\n   --darkreader-selection-text: #fcf2e0;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #75716a;\n    color: #faf2e3;\n}\na {\n    color: #918c83;\n}\ntable {\n    border-color: #625e58;\n}\n::placeholder {\n    color: #bbb4a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #44413d !important;\n    color: #faf2e3 !important;\n}\n::selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}\n::-moz-selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5853 !important;\n    border-color: #bcb6aa !important;\n    color: #fcf4e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #524f4a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 659,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(25%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161614;\n   --darkreader-neutral-text: #e7dfd1;\n   --darkreader-selection-background: #174e8f;\n   --darkreader-selection-text: #fcf2e0;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #75716a;\n    color: #faf2e3;\n}\na {\n    color: #918c83;\n}\ntable {\n    border-color: #625e58;\n}\n::placeholder {\n    color: #bbb4a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #44413d !important;\n    color: #faf2e3 !important;\n}\n::selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}\n::-moz-selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5853 !important;\n    border-color: #bcb6aa !important;\n    color: #fcf4e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #524f4a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 660,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 661,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 662,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 663,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 664,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #75716a;\n    color: #faf2e3;\n}\na {\n    color: #918c83;\n}\ntable {\n    border-color: #625e58;\n}\n::placeholder {\n    color: #bbb4a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #44413d !important;\n    color: #faf2e3 !important;\n}\n::selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}\n::-moz-selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 665,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #75716a;\n    color: #faf2e3;\n}\na {\n    color: #918c83;\n}\ntable {\n    border-color: #625e58;\n}\n::placeholder {\n    color: #bbb4a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #44413d !important;\n    color: #faf2e3 !important;\n}\n::selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}\n::-moz-selection {\n    background-color: #174e8f !important;\n    color: #fcf2e0 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 666,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 667,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 668,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 669,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(25%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 670,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(25%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 671,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 672,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 673,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 674,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5853 !important;\n    border-color: #bcb6aa !important;\n    color: #fcf4e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #524f4a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 675,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5853 !important;\n    border-color: #bcb6aa !important;\n    color: #fcf4e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #363531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #191817 !important;\n}\n.tou-6i3zyv {\n    background-color: #524f4a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 676,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 677,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161614;\n   --darkreader-neutral-text: #e7dfd1;\n   --darkreader-selection-background: #174e8f;\n   --darkreader-selection-text: #fcf2e0;\n}</style>"
            }
        ]
    },
    {
        "mutation": 678,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #161614;\n   --darkreader-neutral-text: #e7dfd1;\n   --darkreader-selection-background: #174e8f;\n   --darkreader-selection-text: #fcf2e0;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 679,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 680,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 681,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 682,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 683,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 684,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(30%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #ebe1d0;\n   --darkreader-selection-background: #1b4e8a;\n   --darkreader-selection-text: #fff4e0;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #77726a;\n    color: #fef4e2;\n}\na {\n    color: #938d82;\n}\ntable {\n    border-color: #635f58;\n}\n::placeholder {\n    color: #beb6a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #45423d !important;\n    color: #fef4e2 !important;\n}\n::selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}\n::-moz-selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5d5952 !important;\n    border-color: #bfb8aa !important;\n    color: #fff6e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #373531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #53504a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 685,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(30%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #ebe1d0;\n   --darkreader-selection-background: #1b4e8a;\n   --darkreader-selection-text: #fff4e0;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #77726a;\n    color: #fef4e2;\n}\na {\n    color: #938d82;\n}\ntable {\n    border-color: #635f58;\n}\n::placeholder {\n    color: #beb6a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #45423d !important;\n    color: #fef4e2 !important;\n}\n::selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}\n::-moz-selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5d5952 !important;\n    border-color: #bfb8aa !important;\n    color: #fff6e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #373531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #53504a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 686,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(30%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #ebe1d0;\n   --darkreader-selection-background: #1b4e8a;\n   --darkreader-selection-text: #fff4e0;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #77726a;\n    color: #fef4e2;\n}\na {\n    color: #938d82;\n}\ntable {\n    border-color: #635f58;\n}\n::placeholder {\n    color: #beb6a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #45423d !important;\n    color: #fef4e2 !important;\n}\n::selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}\n::-moz-selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5d5952 !important;\n    border-color: #bfb8aa !important;\n    color: #fff6e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #373531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #53504a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 687,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 688,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 689,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 690,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 691,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #77726a;\n    color: #fef4e2;\n}\na {\n    color: #938d82;\n}\ntable {\n    border-color: #635f58;\n}\n::placeholder {\n    color: #beb6a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #45423d !important;\n    color: #fef4e2 !important;\n}\n::selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}\n::-moz-selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 692,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1c1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1c1b19;\n}\nhtml, body {\n    border-color: #77726a;\n    color: #fef4e2;\n}\na {\n    color: #938d82;\n}\ntable {\n    border-color: #635f58;\n}\n::placeholder {\n    color: #beb6a9;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #45423d !important;\n    color: #fef4e2 !important;\n}\n::selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}\n::-moz-selection {\n    background-color: #1b4e8a !important;\n    color: #fff4e0 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 693,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 694,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 695,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 696,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(30%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 697,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(30%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 698,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 699,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 700,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 701,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5d5952 !important;\n    border-color: #bfb8aa !important;\n    color: #fff6e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #373531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #53504a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 702,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5d5952 !important;\n    border-color: #bfb8aa !important;\n    color: #fff6e4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #373531 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1d1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #53504a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 703,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 704,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #ebe1d0;\n   --darkreader-selection-background: #1b4e8a;\n   --darkreader-selection-text: #fff4e0;\n}</style>"
            }
        ]
    },
    {
        "mutation": 705,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #ebe1d0;\n   --darkreader-selection-background: #1b4e8a;\n   --darkreader-selection-text: #fff4e0;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 706,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 707,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 708,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 709,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 710,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 711,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(35%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #efe4d0;\n   --darkreader-selection-background: #204f85;\n   --darkreader-selection-text: #fff6df;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1b19;\n}\nhtml, body {\n    border-color: #797369;\n    color: #fff7e1;\n}\na {\n    color: #958e82;\n}\ntable {\n    border-color: #656058;\n}\n::placeholder {\n    color: #c1b8a8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #46433d !important;\n    color: #fff7e1 !important;\n}\n::selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}\n::-moz-selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e5a52 !important;\n    border-color: #c2b9a9 !important;\n    color: #fff8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #383631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #55514a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 712,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(35%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #efe4d0;\n   --darkreader-selection-background: #204f85;\n   --darkreader-selection-text: #fff6df;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1b19;\n}\nhtml, body {\n    border-color: #797369;\n    color: #fff7e1;\n}\na {\n    color: #958e82;\n}\ntable {\n    border-color: #656058;\n}\n::placeholder {\n    color: #c1b8a8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #46433d !important;\n    color: #fff7e1 !important;\n}\n::selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}\n::-moz-selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e5a52 !important;\n    border-color: #c2b9a9 !important;\n    color: #fff8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #383631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #55514a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 713,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(35%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #efe4d0;\n   --darkreader-selection-background: #204f85;\n   --darkreader-selection-text: #fff6df;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1b19;\n}\nhtml, body {\n    border-color: #797369;\n    color: #fff7e1;\n}\na {\n    color: #958e82;\n}\ntable {\n    border-color: #656058;\n}\n::placeholder {\n    color: #c1b8a8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #46433d !important;\n    color: #fff7e1 !important;\n}\n::selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}\n::-moz-selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e5a52 !important;\n    border-color: #c2b9a9 !important;\n    color: #fff8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #383631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #55514a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 714,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 715,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 716,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 717,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 718,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1b19;\n}\nhtml, body {\n    border-color: #797369;\n    color: #fff7e1;\n}\na {\n    color: #958e82;\n}\ntable {\n    border-color: #656058;\n}\n::placeholder {\n    color: #c1b8a8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #46433d !important;\n    color: #fff7e1 !important;\n}\n::selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}\n::-moz-selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 719,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1b19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1b19;\n}\nhtml, body {\n    border-color: #797369;\n    color: #fff7e1;\n}\na {\n    color: #958e82;\n}\ntable {\n    border-color: #656058;\n}\n::placeholder {\n    color: #c1b8a8;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #46433d !important;\n    color: #fff7e1 !important;\n}\n::selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}\n::-moz-selection {\n    background-color: #204f85 !important;\n    color: #fff6df !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 720,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 721,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 722,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 723,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(35%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 724,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(35%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 725,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 726,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 727,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 728,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e5a52 !important;\n    border-color: #c2b9a9 !important;\n    color: #fff8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #383631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #55514a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 729,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5e5a52 !important;\n    border-color: #c2b9a9 !important;\n    color: #fff8e3 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #383631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1c1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #55514a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 730,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 731,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #efe4d0;\n   --darkreader-selection-background: #204f85;\n   --darkreader-selection-text: #fff6df;\n}</style>"
            }
        ]
    },
    {
        "mutation": 732,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #171614;\n   --darkreader-neutral-text: #efe4d0;\n   --darkreader-selection-background: #204f85;\n   --darkreader-selection-text: #fff6df;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 733,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 734,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 735,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 736,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 737,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 738,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181614;\n   --darkreader-neutral-text: #f2e6cf;\n   --darkreader-selection-background: #254f7f;\n   --darkreader-selection-text: #fff9de;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1c19;\n}\nhtml, body {\n    border-color: #7b7569;\n    color: #fff9e0;\n}\na {\n    color: #989082;\n}\ntable {\n    border-color: #666157;\n}\n::placeholder {\n    color: #c4baa7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #47433d !important;\n    color: #fff9e0 !important;\n}\n::selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}\n::-moz-selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605b52 !important;\n    border-color: #c5bba9 !important;\n    color: #fffbe2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #393631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #56524a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 739,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181614;\n   --darkreader-neutral-text: #f2e6cf;\n   --darkreader-selection-background: #254f7f;\n   --darkreader-selection-text: #fff9de;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1c19;\n}\nhtml, body {\n    border-color: #7b7569;\n    color: #fff9e0;\n}\na {\n    color: #989082;\n}\ntable {\n    border-color: #666157;\n}\n::placeholder {\n    color: #c4baa7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #47433d !important;\n    color: #fff9e0 !important;\n}\n::selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}\n::-moz-selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605b52 !important;\n    border-color: #c5bba9 !important;\n    color: #fffbe2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #393631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #56524a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 740,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181614;\n   --darkreader-neutral-text: #f2e6cf;\n   --darkreader-selection-background: #254f7f;\n   --darkreader-selection-text: #fff9de;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1c19;\n}\nhtml, body {\n    border-color: #7b7569;\n    color: #fff9e0;\n}\na {\n    color: #989082;\n}\ntable {\n    border-color: #666157;\n}\n::placeholder {\n    color: #c4baa7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #47433d !important;\n    color: #fff9e0 !important;\n}\n::selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}\n::-moz-selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605b52 !important;\n    border-color: #c5bba9 !important;\n    color: #fffbe2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #393631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #56524a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 741,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 742,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 743,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 744,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 745,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1c19;\n}\nhtml, body {\n    border-color: #7b7569;\n    color: #fff9e0;\n}\na {\n    color: #989082;\n}\ntable {\n    border-color: #666157;\n}\n::placeholder {\n    color: #c4baa7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #47433d !important;\n    color: #fff9e0 !important;\n}\n::selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}\n::-moz-selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 746,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1c19;\n}\nhtml, body {\n    border-color: #7b7569;\n    color: #fff9e0;\n}\na {\n    color: #989082;\n}\ntable {\n    border-color: #666157;\n}\n::placeholder {\n    color: #c4baa7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #47433d !important;\n    color: #fff9e0 !important;\n}\n::selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}\n::-moz-selection {\n    background-color: #254f7f !important;\n    color: #fff9de !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 747,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 748,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 749,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 750,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(40%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 751,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(40%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 752,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 753,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 754,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 755,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605b52 !important;\n    border-color: #c5bba9 !important;\n    color: #fffbe2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #393631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #56524a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 756,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #605b52 !important;\n    border-color: #c5bba9 !important;\n    color: #fffbe2 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #393631 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1e1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0a !important;\n}\n.tou-uknfeu {\n    background-color: #1a1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #56524a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 757,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 758,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181614;\n   --darkreader-neutral-text: #f2e6cf;\n   --darkreader-selection-background: #254f7f;\n   --darkreader-selection-text: #fff9de;\n}</style>"
            }
        ]
    },
    {
        "mutation": 759,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181614;\n   --darkreader-neutral-text: #f2e6cf;\n   --darkreader-selection-background: #254f7f;\n   --darkreader-selection-text: #fff9de;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 760,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 761,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 762,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 763,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 764,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 765,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #f6e8ce;\n   --darkreader-selection-background: #294f7a;\n   --darkreader-selection-text: #fffbde;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7d7669;\n    color: #fffbe0;\n}\na {\n    color: #9a9181;\n}\ntable {\n    border-color: #686257;\n}\n::placeholder {\n    color: #c7bba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #48443c !important;\n    color: #fffbe0 !important;\n}\n::selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}\n::-moz-selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #615c52 !important;\n    border-color: #c8bda8 !important;\n    color: #fffde1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3a3731 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #575249 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 766,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #f6e8ce;\n   --darkreader-selection-background: #294f7a;\n   --darkreader-selection-text: #fffbde;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7d7669;\n    color: #fffbe0;\n}\na {\n    color: #9a9181;\n}\ntable {\n    border-color: #686257;\n}\n::placeholder {\n    color: #c7bba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #48443c !important;\n    color: #fffbe0 !important;\n}\n::selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}\n::-moz-selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #615c52 !important;\n    border-color: #c8bda8 !important;\n    color: #fffde1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3a3731 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #575249 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 767,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #f6e8ce;\n   --darkreader-selection-background: #294f7a;\n   --darkreader-selection-text: #fffbde;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7d7669;\n    color: #fffbe0;\n}\na {\n    color: #9a9181;\n}\ntable {\n    border-color: #686257;\n}\n::placeholder {\n    color: #c7bba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #48443c !important;\n    color: #fffbe0 !important;\n}\n::selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}\n::-moz-selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #615c52 !important;\n    border-color: #c8bda8 !important;\n    color: #fffde1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3a3731 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #575249 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 768,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 769,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 770,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 771,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 772,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7d7669;\n    color: #fffbe0;\n}\na {\n    color: #9a9181;\n}\ntable {\n    border-color: #686257;\n}\n::placeholder {\n    color: #c7bba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #48443c !important;\n    color: #fffbe0 !important;\n}\n::selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}\n::-moz-selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 773,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7d7669;\n    color: #fffbe0;\n}\na {\n    color: #9a9181;\n}\ntable {\n    border-color: #686257;\n}\n::placeholder {\n    color: #c7bba7;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #48443c !important;\n    color: #fffbe0 !important;\n}\n::selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}\n::-moz-selection {\n    background-color: #294f7a !important;\n    color: #fffbde !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 774,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 775,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 776,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 777,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(45%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 778,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(45%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 779,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 780,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 781,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 782,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #615c52 !important;\n    border-color: #c8bda8 !important;\n    color: #fffde1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3a3731 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #575249 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 783,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #615c52 !important;\n    border-color: #c8bda8 !important;\n    color: #fffde1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3a3731 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1917 !important;\n}\n.tou-6i3zyv {\n    background-color: #575249 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 784,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 785,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #f6e8ce;\n   --darkreader-selection-background: #294f7a;\n   --darkreader-selection-text: #fffbde;\n}</style>"
            }
        ]
    },
    {
        "mutation": 786,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #f6e8ce;\n   --darkreader-selection-background: #294f7a;\n   --darkreader-selection-text: #fffbde;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 787,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 788,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 789,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 790,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 791,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 792,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #faeace;\n   --darkreader-selection-background: #2e4f75;\n   --darkreader-selection-text: #fffddd;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7f7768;\n    color: #fffedf;\n}\na {\n    color: #9c9281;\n}\ntable {\n    border-color: #696357;\n}\n::placeholder {\n    color: #cabda6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #49453c !important;\n    color: #fffedf !important;\n}\n::selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}\n::-moz-selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #635d51 !important;\n    border-color: #cbbfa8 !important;\n    color: #ffffe1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3b3730 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #595349 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 793,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #faeace;\n   --darkreader-selection-background: #2e4f75;\n   --darkreader-selection-text: #fffddd;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7f7768;\n    color: #fffedf;\n}\na {\n    color: #9c9281;\n}\ntable {\n    border-color: #696357;\n}\n::placeholder {\n    color: #cabda6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #49453c !important;\n    color: #fffedf !important;\n}\n::selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}\n::-moz-selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #635d51 !important;\n    border-color: #cbbfa8 !important;\n    color: #ffffe1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3b3730 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #595349 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 794,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #faeace;\n   --darkreader-selection-background: #2e4f75;\n   --darkreader-selection-text: #fffddd;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7f7768;\n    color: #fffedf;\n}\na {\n    color: #9c9281;\n}\ntable {\n    border-color: #696357;\n}\n::placeholder {\n    color: #cabda6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #49453c !important;\n    color: #fffedf !important;\n}\n::selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}\n::-moz-selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #635d51 !important;\n    border-color: #cbbfa8 !important;\n    color: #ffffe1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3b3730 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #595349 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 795,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 796,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 797,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 798,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 799,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7f7768;\n    color: #fffedf;\n}\na {\n    color: #9c9281;\n}\ntable {\n    border-color: #696357;\n}\n::placeholder {\n    color: #cabda6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #49453c !important;\n    color: #fffedf !important;\n}\n::selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}\n::-moz-selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 800,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1e1c19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1e1c19;\n}\nhtml, body {\n    border-color: #7f7768;\n    color: #fffedf;\n}\na {\n    color: #9c9281;\n}\ntable {\n    border-color: #696357;\n}\n::placeholder {\n    color: #cabda6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #49453c !important;\n    color: #fffedf !important;\n}\n::selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}\n::-moz-selection {\n    background-color: #2e4f75 !important;\n    color: #fffddd !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 801,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 802,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 803,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 804,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(50%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 805,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(50%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 806,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 807,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 808,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 809,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #635d51 !important;\n    border-color: #cbbfa8 !important;\n    color: #ffffe1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3b3730 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #595349 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 810,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #635d51 !important;\n    border-color: #cbbfa8 !important;\n    color: #ffffe1 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3b3730 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1f1d1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1b1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #595349 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 811,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 812,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #faeace;\n   --darkreader-selection-background: #2e4f75;\n   --darkreader-selection-text: #fffddd;\n}</style>"
            }
        ]
    },
    {
        "mutation": 813,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #181714;\n   --darkreader-neutral-text: #faeace;\n   --darkreader-selection-background: #2e4f75;\n   --darkreader-selection-text: #fffddd;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 814,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 815,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 816,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 817,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 818,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 819,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #feeccd;\n   --darkreader-selection-background: #324f6f;\n   --darkreader-selection-text: #ffffdd;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #817868;\n    color: #ffffde;\n}\na {\n    color: #9f9480;\n}\ntable {\n    border-color: #6b6457;\n}\n::placeholder {\n    color: #cdbfa6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4a453c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}\n::-moz-selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #645d51 !important;\n    border-color: #cec0a7 !important;\n    color: #ffffe0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3c3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5a5449 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 820,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #feeccd;\n   --darkreader-selection-background: #324f6f;\n   --darkreader-selection-text: #ffffdd;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #817868;\n    color: #ffffde;\n}\na {\n    color: #9f9480;\n}\ntable {\n    border-color: #6b6457;\n}\n::placeholder {\n    color: #cdbfa6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4a453c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}\n::-moz-selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #645d51 !important;\n    border-color: #cec0a7 !important;\n    color: #ffffe0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3c3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5a5449 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 821,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #feeccd;\n   --darkreader-selection-background: #324f6f;\n   --darkreader-selection-text: #ffffdd;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #817868;\n    color: #ffffde;\n}\na {\n    color: #9f9480;\n}\ntable {\n    border-color: #6b6457;\n}\n::placeholder {\n    color: #cdbfa6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4a453c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}\n::-moz-selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #645d51 !important;\n    border-color: #cec0a7 !important;\n    color: #ffffe0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3c3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5a5449 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 822,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 823,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 824,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 825,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 826,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #817868;\n    color: #ffffde;\n}\na {\n    color: #9f9480;\n}\ntable {\n    border-color: #6b6457;\n}\n::placeholder {\n    color: #cdbfa6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4a453c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}\n::-moz-selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 827,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #817868;\n    color: #ffffde;\n}\na {\n    color: #9f9480;\n}\ntable {\n    border-color: #6b6457;\n}\n::placeholder {\n    color: #cdbfa6;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4a453c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}\n::-moz-selection {\n    background-color: #324f6f !important;\n    color: #ffffdd !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 828,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 829,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 830,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 831,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(55%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 832,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(55%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 833,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 834,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 835,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 836,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #645d51 !important;\n    border-color: #cec0a7 !important;\n    color: #ffffe0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3c3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5a5449 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 837,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #645d51 !important;\n    border-color: #cec0a7 !important;\n    color: #ffffe0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3c3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5a5449 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 838,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 839,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #feeccd;\n   --darkreader-selection-background: #324f6f;\n   --darkreader-selection-text: #ffffdd;\n}</style>"
            }
        ]
    },
    {
        "mutation": 840,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #feeccd;\n   --darkreader-selection-background: #324f6f;\n   --darkreader-selection-text: #ffffdd;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 841,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 842,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 843,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 844,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 845,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 846,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #ffeecc;\n   --darkreader-selection-background: #37506a;\n   --darkreader-selection-text: #ffffdc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #827968;\n    color: #ffffde;\n}\na {\n    color: #a19580;\n}\ntable {\n    border-color: #6d6556;\n}\n::placeholder {\n    color: #d0c1a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b463c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665e51 !important;\n    border-color: #d1c2a7 !important;\n    color: #ffffdf !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5b5549 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 847,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #ffeecc;\n   --darkreader-selection-background: #37506a;\n   --darkreader-selection-text: #ffffdc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #827968;\n    color: #ffffde;\n}\na {\n    color: #a19580;\n}\ntable {\n    border-color: #6d6556;\n}\n::placeholder {\n    color: #d0c1a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b463c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665e51 !important;\n    border-color: #d1c2a7 !important;\n    color: #ffffdf !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5b5549 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 848,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #ffeecc;\n   --darkreader-selection-background: #37506a;\n   --darkreader-selection-text: #ffffdc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #827968;\n    color: #ffffde;\n}\na {\n    color: #a19580;\n}\ntable {\n    border-color: #6d6556;\n}\n::placeholder {\n    color: #d0c1a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b463c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665e51 !important;\n    border-color: #d1c2a7 !important;\n    color: #ffffdf !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5b5549 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 849,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 850,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 851,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 852,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 853,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #827968;\n    color: #ffffde;\n}\na {\n    color: #a19580;\n}\ntable {\n    border-color: #6d6556;\n}\n::placeholder {\n    color: #d0c1a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b463c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 854,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #827968;\n    color: #ffffde;\n}\na {\n    color: #a19580;\n}\ntable {\n    border-color: #6d6556;\n}\n::placeholder {\n    color: #d0c1a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b463c !important;\n    color: #ffffde !important;\n}\n::selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #37506a !important;\n    color: #ffffdc !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 855,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 856,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 857,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 858,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(60%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 859,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(60%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 860,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 861,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 862,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 863,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665e51 !important;\n    border-color: #d1c2a7 !important;\n    color: #ffffdf !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5b5549 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 864,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #665e51 !important;\n    border-color: #d1c2a7 !important;\n    color: #ffffdf !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3830 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #201e1a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5b5549 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 865,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 866,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #ffeecc;\n   --darkreader-selection-background: #37506a;\n   --darkreader-selection-text: #ffffdc;\n}</style>"
            }
        ]
    },
    {
        "mutation": 867,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #ffeecc;\n   --darkreader-selection-background: #37506a;\n   --darkreader-selection-text: #ffffdc;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 868,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 869,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 870,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 871,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 872,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 873,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #fff1cc;\n   --darkreader-selection-background: #3b5065;\n   --darkreader-selection-text: #ffffdc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #847a67;\n    color: #ffffdd;\n}\na {\n    color: #a39780;\n}\ntable {\n    border-color: #6e6656;\n}\n::placeholder {\n    color: #d3c2a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4c463c !important;\n    color: #ffffdd !important;\n}\n::selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #675f51 !important;\n    border-color: #d5c4a6 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5d5548 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 874,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #fff1cc;\n   --darkreader-selection-background: #3b5065;\n   --darkreader-selection-text: #ffffdc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #847a67;\n    color: #ffffdd;\n}\na {\n    color: #a39780;\n}\ntable {\n    border-color: #6e6656;\n}\n::placeholder {\n    color: #d3c2a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4c463c !important;\n    color: #ffffdd !important;\n}\n::selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #675f51 !important;\n    border-color: #d5c4a6 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5d5548 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 875,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #fff1cc;\n   --darkreader-selection-background: #3b5065;\n   --darkreader-selection-text: #ffffdc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #847a67;\n    color: #ffffdd;\n}\na {\n    color: #a39780;\n}\ntable {\n    border-color: #6e6656;\n}\n::placeholder {\n    color: #d3c2a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4c463c !important;\n    color: #ffffdd !important;\n}\n::selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #675f51 !important;\n    border-color: #d5c4a6 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5d5548 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 876,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 877,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 878,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 879,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 880,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #847a67;\n    color: #ffffdd;\n}\na {\n    color: #a39780;\n}\ntable {\n    border-color: #6e6656;\n}\n::placeholder {\n    color: #d3c2a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4c463c !important;\n    color: #ffffdd !important;\n}\n::selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 881,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1f1d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1f1d19;\n}\nhtml, body {\n    border-color: #847a67;\n    color: #ffffdd;\n}\na {\n    color: #a39780;\n}\ntable {\n    border-color: #6e6656;\n}\n::placeholder {\n    color: #d3c2a5;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4c463c !important;\n    color: #ffffdd !important;\n}\n::selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}\n::-moz-selection {\n    background-color: #3b5065 !important;\n    color: #ffffdc !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 882,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 883,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 884,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 885,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(65%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 886,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(65%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 887,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 888,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 889,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 890,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #675f51 !important;\n    border-color: #d5c4a6 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5d5548 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 891,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #675f51 !important;\n    border-color: #d5c4a6 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3d3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5d5548 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 892,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 893,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #fff1cc;\n   --darkreader-selection-background: #3b5065;\n   --darkreader-selection-text: #ffffdc;\n}</style>"
            }
        ]
    },
    {
        "mutation": 894,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #191714;\n   --darkreader-neutral-text: #fff1cc;\n   --darkreader-selection-background: #3b5065;\n   --darkreader-selection-text: #ffffdc;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 895,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 896,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 897,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 898,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 899,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 900,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff3cb;\n   --darkreader-selection-background: #40505f;\n   --darkreader-selection-text: #ffffdb;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201d19;\n}\nhtml, body {\n    border-color: #867b67;\n    color: #ffffdc;\n}\na {\n    color: #a6987f;\n}\ntable {\n    border-color: #706656;\n}\n::placeholder {\n    color: #d6c4a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4e473b !important;\n    color: #ffffdc !important;\n}\n::selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}\n::-moz-selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #696050 !important;\n    border-color: #d8c6a5 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5e5648 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 901,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff3cb;\n   --darkreader-selection-background: #40505f;\n   --darkreader-selection-text: #ffffdb;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201d19;\n}\nhtml, body {\n    border-color: #867b67;\n    color: #ffffdc;\n}\na {\n    color: #a6987f;\n}\ntable {\n    border-color: #706656;\n}\n::placeholder {\n    color: #d6c4a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4e473b !important;\n    color: #ffffdc !important;\n}\n::selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}\n::-moz-selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #696050 !important;\n    border-color: #d8c6a5 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5e5648 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 902,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff3cb;\n   --darkreader-selection-background: #40505f;\n   --darkreader-selection-text: #ffffdb;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201d19;\n}\nhtml, body {\n    border-color: #867b67;\n    color: #ffffdc;\n}\na {\n    color: #a6987f;\n}\ntable {\n    border-color: #706656;\n}\n::placeholder {\n    color: #d6c4a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4e473b !important;\n    color: #ffffdc !important;\n}\n::selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}\n::-moz-selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #696050 !important;\n    border-color: #d8c6a5 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5e5648 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 903,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 904,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 905,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 906,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 907,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201d19;\n}\nhtml, body {\n    border-color: #867b67;\n    color: #ffffdc;\n}\na {\n    color: #a6987f;\n}\ntable {\n    border-color: #706656;\n}\n::placeholder {\n    color: #d6c4a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4e473b !important;\n    color: #ffffdc !important;\n}\n::selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}\n::-moz-selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 908,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201d19 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201d19;\n}\nhtml, body {\n    border-color: #867b67;\n    color: #ffffdc;\n}\na {\n    color: #a6987f;\n}\ntable {\n    border-color: #706656;\n}\n::placeholder {\n    color: #d6c4a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4e473b !important;\n    color: #ffffdc !important;\n}\n::selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}\n::-moz-selection {\n    background-color: #40505f !important;\n    color: #ffffdb !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 909,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 910,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 911,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 912,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(70%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 913,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(70%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 914,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 915,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 916,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 917,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #696050 !important;\n    border-color: #d8c6a5 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5e5648 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 918,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #696050 !important;\n    border-color: #d8c6a5 !important;\n    color: #ffffde !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e3930 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #211e19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1a16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5e5648 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 919,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 920,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff3cb;\n   --darkreader-selection-background: #40505f;\n   --darkreader-selection-text: #ffffdb;\n}</style>"
            }
        ]
    },
    {
        "mutation": 921,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff3cb;\n   --darkreader-selection-background: #40505f;\n   --darkreader-selection-text: #ffffdb;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 922,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 923,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 924,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 925,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 926,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 927,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff5ca;\n   --darkreader-selection-background: #45505a;\n   --darkreader-selection-text: #ffffda;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201e18;\n}\nhtml, body {\n    border-color: #887c67;\n    color: #ffffdb;\n}\na {\n    color: #a8997f;\n}\ntable {\n    border-color: #716755;\n}\n::placeholder {\n    color: #d9c6a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4f483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a6150 !important;\n    border-color: #dbc7a5 !important;\n    color: #ffffdd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3f3a30 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5f5748 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 928,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff5ca;\n   --darkreader-selection-background: #45505a;\n   --darkreader-selection-text: #ffffda;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201e18;\n}\nhtml, body {\n    border-color: #887c67;\n    color: #ffffdb;\n}\na {\n    color: #a8997f;\n}\ntable {\n    border-color: #716755;\n}\n::placeholder {\n    color: #d9c6a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4f483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a6150 !important;\n    border-color: #dbc7a5 !important;\n    color: #ffffdd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3f3a30 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5f5748 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 929,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff5ca;\n   --darkreader-selection-background: #45505a;\n   --darkreader-selection-text: #ffffda;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201e18;\n}\nhtml, body {\n    border-color: #887c67;\n    color: #ffffdb;\n}\na {\n    color: #a8997f;\n}\ntable {\n    border-color: #716755;\n}\n::placeholder {\n    color: #d9c6a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4f483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a6150 !important;\n    border-color: #dbc7a5 !important;\n    color: #ffffdd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3f3a30 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5f5748 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 930,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 931,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 932,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 933,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 934,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201e18;\n}\nhtml, body {\n    border-color: #887c67;\n    color: #ffffdb;\n}\na {\n    color: #a8997f;\n}\ntable {\n    border-color: #716755;\n}\n::placeholder {\n    color: #d9c6a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4f483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 935,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #201e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #201e18;\n}\nhtml, body {\n    border-color: #887c67;\n    color: #ffffdb;\n}\na {\n    color: #a8997f;\n}\ntable {\n    border-color: #716755;\n}\n::placeholder {\n    color: #d9c6a4;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4f483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #45505a !important;\n    color: #ffffda !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 936,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 937,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 938,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 939,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(75%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 940,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(75%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 941,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 942,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 943,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 944,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a6150 !important;\n    border-color: #dbc7a5 !important;\n    color: #ffffdd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3f3a30 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5f5748 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 945,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6a6150 !important;\n    border-color: #dbc7a5 !important;\n    color: #ffffdd !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3f3a30 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1d1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #5f5748 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 946,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 947,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff5ca;\n   --darkreader-selection-background: #45505a;\n   --darkreader-selection-text: #ffffda;\n}</style>"
            }
        ]
    },
    {
        "mutation": 948,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff5ca;\n   --darkreader-selection-background: #45505a;\n   --darkreader-selection-text: #ffffda;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 949,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 950,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 951,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 952,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 953,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 954,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff7ca;\n   --darkreader-selection-background: #495155;\n   --darkreader-selection-text: #ffffda;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8a7d66;\n    color: #ffffdb;\n}\na {\n    color: #aa9b7e;\n}\ntable {\n    border-color: #736855;\n}\n::placeholder {\n    color: #dcc8a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #50483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c6250 !important;\n    border-color: #dec9a4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #403a2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #615848 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 955,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff7ca;\n   --darkreader-selection-background: #495155;\n   --darkreader-selection-text: #ffffda;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8a7d66;\n    color: #ffffdb;\n}\na {\n    color: #aa9b7e;\n}\ntable {\n    border-color: #736855;\n}\n::placeholder {\n    color: #dcc8a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #50483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c6250 !important;\n    border-color: #dec9a4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #403a2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #615848 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 956,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff7ca;\n   --darkreader-selection-background: #495155;\n   --darkreader-selection-text: #ffffda;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8a7d66;\n    color: #ffffdb;\n}\na {\n    color: #aa9b7e;\n}\ntable {\n    border-color: #736855;\n}\n::placeholder {\n    color: #dcc8a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #50483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c6250 !important;\n    border-color: #dec9a4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #403a2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #615848 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 957,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 958,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 959,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 960,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 961,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8a7d66;\n    color: #ffffdb;\n}\na {\n    color: #aa9b7e;\n}\ntable {\n    border-color: #736855;\n}\n::placeholder {\n    color: #dcc8a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #50483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 962,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8a7d66;\n    color: #ffffdb;\n}\na {\n    color: #aa9b7e;\n}\ntable {\n    border-color: #736855;\n}\n::placeholder {\n    color: #dcc8a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #50483b !important;\n    color: #ffffdb !important;\n}\n::selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}\n::-moz-selection {\n    background-color: #495155 !important;\n    color: #ffffda !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 963,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 964,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 965,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 966,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(80%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 967,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(80%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 968,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 969,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 970,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 971,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c6250 !important;\n    border-color: #dec9a4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #403a2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #615848 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 972,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6c6250 !important;\n    border-color: #dec9a4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #403a2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #221f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0c0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #615848 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 973,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 974,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff7ca;\n   --darkreader-selection-background: #495155;\n   --darkreader-selection-text: #ffffda;\n}</style>"
            }
        ]
    },
    {
        "mutation": 975,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1a1814;\n   --darkreader-neutral-text: #fff7ca;\n   --darkreader-selection-background: #495155;\n   --darkreader-selection-text: #ffffda;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 976,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 977,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 978,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 979,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 980,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 981,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1814;\n   --darkreader-neutral-text: #fff9c9;\n   --darkreader-selection-background: #4e514f;\n   --darkreader-selection-text: #ffffd9;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8c7e66;\n    color: #ffffda;\n}\na {\n    color: #ad9c7e;\n}\ntable {\n    border-color: #746955;\n}\n::placeholder {\n    color: #dfc9a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #51493b !important;\n    color: #ffffda !important;\n}\n::selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d6350 !important;\n    border-color: #e1cba4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #413b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #625947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 982,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1814;\n   --darkreader-neutral-text: #fff9c9;\n   --darkreader-selection-background: #4e514f;\n   --darkreader-selection-text: #ffffd9;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8c7e66;\n    color: #ffffda;\n}\na {\n    color: #ad9c7e;\n}\ntable {\n    border-color: #746955;\n}\n::placeholder {\n    color: #dfc9a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #51493b !important;\n    color: #ffffda !important;\n}\n::selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d6350 !important;\n    border-color: #e1cba4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #413b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #625947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 983,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1814;\n   --darkreader-neutral-text: #fff9c9;\n   --darkreader-selection-background: #4e514f;\n   --darkreader-selection-text: #ffffd9;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8c7e66;\n    color: #ffffda;\n}\na {\n    color: #ad9c7e;\n}\ntable {\n    border-color: #746955;\n}\n::placeholder {\n    color: #dfc9a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #51493b !important;\n    color: #ffffda !important;\n}\n::selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d6350 !important;\n    border-color: #e1cba4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #413b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #625947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 984,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 985,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 986,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 987,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 988,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8c7e66;\n    color: #ffffda;\n}\na {\n    color: #ad9c7e;\n}\ntable {\n    border-color: #746955;\n}\n::placeholder {\n    color: #dfc9a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #51493b !important;\n    color: #ffffda !important;\n}\n::selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 989,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #211e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #211e18;\n}\nhtml, body {\n    border-color: #8c7e66;\n    color: #ffffda;\n}\na {\n    color: #ad9c7e;\n}\ntable {\n    border-color: #746955;\n}\n::placeholder {\n    color: #dfc9a3;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #51493b !important;\n    color: #ffffda !important;\n}\n::selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #4e514f !important;\n    color: #ffffd9 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 990,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 991,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 992,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 993,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(85%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 994,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(85%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 995,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 996,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 997,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 998,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d6350 !important;\n    border-color: #e1cba4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #413b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #625947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 999,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6d6350 !important;\n    border-color: #e1cba4 !important;\n    color: #ffffdc !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #413b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0b09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #625947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1000,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1001,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1814;\n   --darkreader-neutral-text: #fff9c9;\n   --darkreader-selection-background: #4e514f;\n   --darkreader-selection-text: #ffffd9;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1002,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1814;\n   --darkreader-neutral-text: #fff9c9;\n   --darkreader-selection-background: #4e514f;\n   --darkreader-selection-text: #ffffd9;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1003,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1004,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1005,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1006,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 1007,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1008,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1813;\n   --darkreader-neutral-text: #fffbc8;\n   --darkreader-selection-background: #52514a;\n   --darkreader-selection-text: #ffffd9;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221e18;\n}\nhtml, body {\n    border-color: #8e7f66;\n    color: #ffffd9;\n}\na {\n    color: #af9d7d;\n}\ntable {\n    border-color: #766a55;\n}\n::placeholder {\n    color: #e2cba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #524a3b !important;\n    color: #ffffd9 !important;\n}\n::selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f634f !important;\n    border-color: #e4cda3 !important;\n    color: #ffffdb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #423b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #635947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1009,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1813;\n   --darkreader-neutral-text: #fffbc8;\n   --darkreader-selection-background: #52514a;\n   --darkreader-selection-text: #ffffd9;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221e18;\n}\nhtml, body {\n    border-color: #8e7f66;\n    color: #ffffd9;\n}\na {\n    color: #af9d7d;\n}\ntable {\n    border-color: #766a55;\n}\n::placeholder {\n    color: #e2cba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #524a3b !important;\n    color: #ffffd9 !important;\n}\n::selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f634f !important;\n    border-color: #e4cda3 !important;\n    color: #ffffdb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #423b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #635947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1010,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1813;\n   --darkreader-neutral-text: #fffbc8;\n   --darkreader-selection-background: #52514a;\n   --darkreader-selection-text: #ffffd9;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221e18;\n}\nhtml, body {\n    border-color: #8e7f66;\n    color: #ffffd9;\n}\na {\n    color: #af9d7d;\n}\ntable {\n    border-color: #766a55;\n}\n::placeholder {\n    color: #e2cba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #524a3b !important;\n    color: #ffffd9 !important;\n}\n::selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f634f !important;\n    border-color: #e4cda3 !important;\n    color: #ffffdb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #423b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #635947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1011,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 1012,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1013,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1014,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1015,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221e18;\n}\nhtml, body {\n    border-color: #8e7f66;\n    color: #ffffd9;\n}\na {\n    color: #af9d7d;\n}\ntable {\n    border-color: #766a55;\n}\n::placeholder {\n    color: #e2cba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #524a3b !important;\n    color: #ffffd9 !important;\n}\n::selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1016,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221e18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221e18;\n}\nhtml, body {\n    border-color: #8e7f66;\n    color: #ffffd9;\n}\na {\n    color: #af9d7d;\n}\ntable {\n    border-color: #766a55;\n}\n::placeholder {\n    color: #e2cba2;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #524a3b !important;\n    color: #ffffd9 !important;\n}\n::selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}\n::-moz-selection {\n    background-color: #52514a !important;\n    color: #ffffd9 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1017,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1018,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1019,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1020,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1021,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1022,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1023,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1024,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1025,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f634f !important;\n    border-color: #e4cda3 !important;\n    color: #ffffdb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #423b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #635947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 1026,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f634f !important;\n    border-color: #e4cda3 !important;\n    color: #ffffdb !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #423b2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #231f19 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1b16 !important;\n}\n.tou-6i3zyv {\n    background-color: #635947 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1027,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1028,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1813;\n   --darkreader-neutral-text: #fffbc8;\n   --darkreader-selection-background: #52514a;\n   --darkreader-selection-text: #ffffd9;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1029,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1813;\n   --darkreader-neutral-text: #fffbc8;\n   --darkreader-selection-background: #52514a;\n   --darkreader-selection-text: #ffffd9;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1030,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1031,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1032,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1033,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 1034,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1035,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(95%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #fffdc8;\n   --darkreader-selection-background: #575145;\n   --darkreader-selection-text: #ffffd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221f18;\n}\nhtml, body {\n    border-color: #908165;\n    color: #ffffd8;\n}\na {\n    color: #b19f7d;\n}\ntable {\n    border-color: #786b54;\n}\n::placeholder {\n    color: #e5cda1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #534a3b !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #70644f !important;\n    border-color: #e7cea3 !important;\n    color: #ffffda !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #433c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #232019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #655a47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1036,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(95%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #fffdc8;\n   --darkreader-selection-background: #575145;\n   --darkreader-selection-text: #ffffd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221f18;\n}\nhtml, body {\n    border-color: #908165;\n    color: #ffffd8;\n}\na {\n    color: #b19f7d;\n}\ntable {\n    border-color: #786b54;\n}\n::placeholder {\n    color: #e5cda1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #534a3b !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #70644f !important;\n    border-color: #e7cea3 !important;\n    color: #ffffda !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #433c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #232019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #655a47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1037,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(95%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #fffdc8;\n   --darkreader-selection-background: #575145;\n   --darkreader-selection-text: #ffffd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221f18;\n}\nhtml, body {\n    border-color: #908165;\n    color: #ffffd8;\n}\na {\n    color: #b19f7d;\n}\ntable {\n    border-color: #786b54;\n}\n::placeholder {\n    color: #e5cda1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #534a3b !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #70644f !important;\n    border-color: #e7cea3 !important;\n    color: #ffffda !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #433c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #232019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #655a47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1038,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 1039,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1040,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1041,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1042,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221f18;\n}\nhtml, body {\n    border-color: #908165;\n    color: #ffffd8;\n}\na {\n    color: #b19f7d;\n}\ntable {\n    border-color: #786b54;\n}\n::placeholder {\n    color: #e5cda1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #534a3b !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1043,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #221f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #221f18;\n}\nhtml, body {\n    border-color: #908165;\n    color: #ffffd8;\n}\na {\n    color: #b19f7d;\n}\ntable {\n    border-color: #786b54;\n}\n::placeholder {\n    color: #e5cda1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #534a3b !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #575145 !important;\n    color: #ffffd8 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1044,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1045,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1046,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1047,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(95%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1048,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(95%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1049,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1050,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1051,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1052,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #70644f !important;\n    border-color: #e7cea3 !important;\n    color: #ffffda !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #433c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #232019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #655a47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 1053,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #70644f !important;\n    border-color: #e7cea3 !important;\n    color: #ffffda !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #433c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #232019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #655a47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1054,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1055,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #fffdc8;\n   --darkreader-selection-background: #575145;\n   --darkreader-selection-text: #ffffd8;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1056,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #fffdc8;\n   --darkreader-selection-background: #575145;\n   --darkreader-selection-text: #ffffd8;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1057,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1058,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1059,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1060,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 1061,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1062,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(100%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #ffffc7;\n   --darkreader-selection-background: #5b513f;\n   --darkreader-selection-text: #ffffd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #231f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #231f18;\n}\nhtml, body {\n    border-color: #928265;\n    color: #ffffd8;\n}\na {\n    color: #b4a07d;\n}\ntable {\n    border-color: #796c54;\n}\n::placeholder {\n    color: #e8cfa1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #544b3a !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #72654f !important;\n    border-color: #ead0a2 !important;\n    color: #ffffd9 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #443c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #242019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #665b47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1063,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(100%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #ffffc7;\n   --darkreader-selection-background: #5b513f;\n   --darkreader-selection-text: #ffffd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #231f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #231f18;\n}\nhtml, body {\n    border-color: #928265;\n    color: #ffffd8;\n}\na {\n    color: #b4a07d;\n}\ntable {\n    border-color: #796c54;\n}\n::placeholder {\n    color: #e8cfa1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #544b3a !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #72654f !important;\n    border-color: #ead0a2 !important;\n    color: #ffffd9 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #443c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #242019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #665b47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1064,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(100%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #ffffc7;\n   --darkreader-selection-background: #5b513f;\n   --darkreader-selection-text: #ffffd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #231f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #231f18;\n}\nhtml, body {\n    border-color: #928265;\n    color: #ffffd8;\n}\na {\n    color: #b4a07d;\n}\ntable {\n    border-color: #796c54;\n}\n::placeholder {\n    color: #e8cfa1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #544b3a !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"9784104967a04efa981620bd13c698ec\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #72654f !important;\n    border-color: #ead0a2 !important;\n    color: #ffffd9 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #443c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #242019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #665b47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 1065,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 1066,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1067,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1068,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1069,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #231f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #231f18;\n}\nhtml, body {\n    border-color: #928265;\n    color: #ffffd8;\n}\na {\n    color: #b4a07d;\n}\ntable {\n    border-color: #796c54;\n}\n::placeholder {\n    color: #e8cfa1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #544b3a !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1070,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #231f18 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #231f18;\n}\nhtml, body {\n    border-color: #928265;\n    color: #ffffd8;\n}\na {\n    color: #b4a07d;\n}\ntable {\n    border-color: #796c54;\n}\n::placeholder {\n    color: #e8cfa1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #544b3a !important;\n    color: #ffffd8 !important;\n}\n::selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}\n::-moz-selection {\n    background-color: #5b513f !important;\n    color: #ffffd8 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1071,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1072,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1073,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1074,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(100%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1075,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(100%) sepia(100%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1076,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1077,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1078,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1079,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #72654f !important;\n    border-color: #ead0a2 !important;\n    color: #ffffd9 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #443c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #242019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #665b47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 1080,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #72654f !important;\n    border-color: #ead0a2 !important;\n    color: #ffffd9 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #443c2f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #242019 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0d0c09 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1c16 !important;\n}\n.tou-6i3zyv {\n    background-color: #665b47 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1081,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 1082,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #ffffc7;\n   --darkreader-selection-background: #5b513f;\n   --darkreader-selection-text: #ffffd8;\n}</style>"
            }
        ]
    },
    {
        "mutation": 1083,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1c1913;\n   --darkreader-neutral-text: #ffffc7;\n   --darkreader-selection-background: #5b513f;\n   --darkreader-selection-text: #ffffd8;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1084,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 1085,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1086,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 1087,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 1088,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    }
]