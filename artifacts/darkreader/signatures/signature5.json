[
    {
        "mutation": 1,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\">"
            }
        ],
        "removed": []
    },
    {
        "mutation": 2,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-mode=\"dynamic\" data-darkreader-scheme=\"dark\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 3,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-mode=\"dynamic\" data-darkreader-scheme=\"dark\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 4,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 5,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 6,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 7,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 8,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 9,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 10,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 11,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 12,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 13,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 14,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 15,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 16,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 17,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(95%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #121415;\n   --darkreader-neutral-text: #cdc9c5;\n   --darkreader-selection-background: #0049a2;\n   --darkreader-selection-text: #dcdbd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #17191a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #17191a;\n}\nhtml, body {\n    border-color: #6d6659;\n    color: #dcdbd8;\n}\na {\n    color: #308af2;\n}\ntable {\n    border-color: #505659;\n}\n::placeholder {\n    color: #a9a299;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d4100 !important;\n    color: #dcdbd8 !important;\n}\n::selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}\n::-moz-selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #754f00 !important;\n    border-color: #cda712 !important;\n    color: #e7dcbe !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3745 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031e27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #211503 !important;\n}\n.tou-6i3zyv {\n    background-color: #185367 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 18,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(95%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #121415;\n   --darkreader-neutral-text: #cdc9c5;\n   --darkreader-selection-background: #0049a2;\n   --darkreader-selection-text: #dcdbd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #17191a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #17191a;\n}\nhtml, body {\n    border-color: #6d6659;\n    color: #dcdbd8;\n}\na {\n    color: #308af2;\n}\ntable {\n    border-color: #505659;\n}\n::placeholder {\n    color: #a9a299;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d4100 !important;\n    color: #dcdbd8 !important;\n}\n::selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}\n::-moz-selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #754f00 !important;\n    border-color: #cda712 !important;\n    color: #e7dcbe !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3745 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031e27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #211503 !important;\n}\n.tou-6i3zyv {\n    background-color: #185367 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 19,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(95%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #121415;\n   --darkreader-neutral-text: #cdc9c5;\n   --darkreader-selection-background: #0049a2;\n   --darkreader-selection-text: #dcdbd8;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #17191a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #17191a;\n}\nhtml, body {\n    border-color: #6d6659;\n    color: #dcdbd8;\n}\na {\n    color: #308af2;\n}\ntable {\n    border-color: #505659;\n}\n::placeholder {\n    color: #a9a299;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d4100 !important;\n    color: #dcdbd8 !important;\n}\n::selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}\n::-moz-selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #754f00 !important;\n    border-color: #cda712 !important;\n    color: #e7dcbe !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3745 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031e27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #211503 !important;\n}\n.tou-6i3zyv {\n    background-color: #185367 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 20,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 21,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 22,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 23,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 24,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #17191a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #17191a;\n}\nhtml, body {\n    border-color: #6d6659;\n    color: #dcdbd8;\n}\na {\n    color: #308af2;\n}\ntable {\n    border-color: #505659;\n}\n::placeholder {\n    color: #a9a299;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d4100 !important;\n    color: #dcdbd8 !important;\n}\n::selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}\n::-moz-selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 25,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #17191a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #17191a;\n}\nhtml, body {\n    border-color: #6d6659;\n    color: #dcdbd8;\n}\na {\n    color: #308af2;\n}\ntable {\n    border-color: #505659;\n}\n::placeholder {\n    color: #a9a299;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d4100 !important;\n    color: #dcdbd8 !important;\n}\n::selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}\n::-moz-selection {\n    background-color: #0049a2 !important;\n    color: #dcdbd8 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 26,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 27,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 28,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 29,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(95%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 30,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(95%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 31,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 32,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 33,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 34,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #754f00 !important;\n    border-color: #cda712 !important;\n    color: #e7dcbe !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3745 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031e27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #211503 !important;\n}\n.tou-6i3zyv {\n    background-color: #185367 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 35,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #754f00 !important;\n    border-color: #cda712 !important;\n    color: #e7dcbe !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3745 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031e27 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #211503 !important;\n}\n.tou-6i3zyv {\n    background-color: #185367 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 36,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 37,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #121415;\n   --darkreader-neutral-text: #cdc9c5;\n   --darkreader-selection-background: #0049a2;\n   --darkreader-selection-text: #dcdbd8;\n}</style>"
            }
        ]
    },
    {
        "mutation": 38,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #121415;\n   --darkreader-neutral-text: #cdc9c5;\n   --darkreader-selection-background: #0049a2;\n   --darkreader-selection-text: #dcdbd8;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 39,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 40,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 41,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 42,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 43,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 44,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(90%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #111314;\n   --darkreader-neutral-text: #c2bfba;\n   --darkreader-selection-background: #004599;\n   --darkreader-selection-text: #d1cfcc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #161718 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #161718;\n}\nhtml, body {\n    border-color: #686055;\n    color: #d1cfcc;\n}\na {\n    color: #2e83e6;\n}\ntable {\n    border-color: #4c5255;\n}\n::placeholder {\n    color: #a09a91;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3a3d00 !important;\n    color: #d1cfcc !important;\n}\n::selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}\n::-moz-selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f4b00 !important;\n    border-color: #c29e11 !important;\n    color: #dbd1b4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3441 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031d25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1402 !important;\n}\n.tou-6i3zyv {\n    background-color: #174e61 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 45,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(90%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #111314;\n   --darkreader-neutral-text: #c2bfba;\n   --darkreader-selection-background: #004599;\n   --darkreader-selection-text: #d1cfcc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #161718 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #161718;\n}\nhtml, body {\n    border-color: #686055;\n    color: #d1cfcc;\n}\na {\n    color: #2e83e6;\n}\ntable {\n    border-color: #4c5255;\n}\n::placeholder {\n    color: #a09a91;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3a3d00 !important;\n    color: #d1cfcc !important;\n}\n::selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}\n::-moz-selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f4b00 !important;\n    border-color: #c29e11 !important;\n    color: #dbd1b4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3441 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031d25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1402 !important;\n}\n.tou-6i3zyv {\n    background-color: #174e61 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 46,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(90%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #111314;\n   --darkreader-neutral-text: #c2bfba;\n   --darkreader-selection-background: #004599;\n   --darkreader-selection-text: #d1cfcc;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #161718 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #161718;\n}\nhtml, body {\n    border-color: #686055;\n    color: #d1cfcc;\n}\na {\n    color: #2e83e6;\n}\ntable {\n    border-color: #4c5255;\n}\n::placeholder {\n    color: #a09a91;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3a3d00 !important;\n    color: #d1cfcc !important;\n}\n::selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}\n::-moz-selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f4b00 !important;\n    border-color: #c29e11 !important;\n    color: #dbd1b4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3441 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031d25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1402 !important;\n}\n.tou-6i3zyv {\n    background-color: #174e61 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 47,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 48,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 49,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 50,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 51,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #161718 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #161718;\n}\nhtml, body {\n    border-color: #686055;\n    color: #d1cfcc;\n}\na {\n    color: #2e83e6;\n}\ntable {\n    border-color: #4c5255;\n}\n::placeholder {\n    color: #a09a91;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3a3d00 !important;\n    color: #d1cfcc !important;\n}\n::selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}\n::-moz-selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 52,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #161718 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #161718;\n}\nhtml, body {\n    border-color: #686055;\n    color: #d1cfcc;\n}\na {\n    color: #2e83e6;\n}\ntable {\n    border-color: #4c5255;\n}\n::placeholder {\n    color: #a09a91;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3a3d00 !important;\n    color: #d1cfcc !important;\n}\n::selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}\n::-moz-selection {\n    background-color: #004599 !important;\n    color: #d1cfcc !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 53,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 54,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 55,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 56,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(90%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 57,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(90%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 58,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 59,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 60,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 61,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f4b00 !important;\n    border-color: #c29e11 !important;\n    color: #dbd1b4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3441 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031d25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1402 !important;\n}\n.tou-6i3zyv {\n    background-color: #174e61 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 62,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #6f4b00 !important;\n    border-color: #c29e11 !important;\n    color: #dbd1b4 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e3441 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031d25 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #090909 !important;\n}\n.tou-uknfeu {\n    background-color: #1f1402 !important;\n}\n.tou-6i3zyv {\n    background-color: #174e61 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 63,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 64,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #111314;\n   --darkreader-neutral-text: #c2bfba;\n   --darkreader-selection-background: #004599;\n   --darkreader-selection-text: #d1cfcc;\n}</style>"
            }
        ]
    },
    {
        "mutation": 65,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #111314;\n   --darkreader-neutral-text: #c2bfba;\n   --darkreader-selection-background: #004599;\n   --darkreader-selection-text: #d1cfcc;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 66,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 67,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 68,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 69,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 70,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 71,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(85%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #101213;\n   --darkreader-neutral-text: #b8b4b0;\n   --darkreader-selection-background: #004191;\n   --darkreader-selection-text: #c5c3c1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #141617 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #141617;\n}\nhtml, body {\n    border-color: #625b50;\n    color: #c5c3c1;\n}\na {\n    color: #2b7bd9;\n}\ntable {\n    border-color: #474d50;\n}\n::placeholder {\n    color: #979189;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #363a00 !important;\n    color: #c5c3c1 !important;\n}\n::selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}\n::-moz-selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #694700 !important;\n    border-color: #b79510 !important;\n    color: #cfc5aa !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0d313d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031b23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1302 !important;\n}\n.tou-6i3zyv {\n    background-color: #154a5c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 72,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(85%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #101213;\n   --darkreader-neutral-text: #b8b4b0;\n   --darkreader-selection-background: #004191;\n   --darkreader-selection-text: #c5c3c1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #141617 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #141617;\n}\nhtml, body {\n    border-color: #625b50;\n    color: #c5c3c1;\n}\na {\n    color: #2b7bd9;\n}\ntable {\n    border-color: #474d50;\n}\n::placeholder {\n    color: #979189;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #363a00 !important;\n    color: #c5c3c1 !important;\n}\n::selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}\n::-moz-selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #694700 !important;\n    border-color: #b79510 !important;\n    color: #cfc5aa !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0d313d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031b23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1302 !important;\n}\n.tou-6i3zyv {\n    background-color: #154a5c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 73,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(85%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #101213;\n   --darkreader-neutral-text: #b8b4b0;\n   --darkreader-selection-background: #004191;\n   --darkreader-selection-text: #c5c3c1;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #141617 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #141617;\n}\nhtml, body {\n    border-color: #625b50;\n    color: #c5c3c1;\n}\na {\n    color: #2b7bd9;\n}\ntable {\n    border-color: #474d50;\n}\n::placeholder {\n    color: #979189;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #363a00 !important;\n    color: #c5c3c1 !important;\n}\n::selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}\n::-moz-selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #694700 !important;\n    border-color: #b79510 !important;\n    color: #cfc5aa !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0d313d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031b23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1302 !important;\n}\n.tou-6i3zyv {\n    background-color: #154a5c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 74,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 75,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 76,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 77,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 78,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #141617 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #141617;\n}\nhtml, body {\n    border-color: #625b50;\n    color: #c5c3c1;\n}\na {\n    color: #2b7bd9;\n}\ntable {\n    border-color: #474d50;\n}\n::placeholder {\n    color: #979189;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #363a00 !important;\n    color: #c5c3c1 !important;\n}\n::selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}\n::-moz-selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 79,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #141617 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #141617;\n}\nhtml, body {\n    border-color: #625b50;\n    color: #c5c3c1;\n}\na {\n    color: #2b7bd9;\n}\ntable {\n    border-color: #474d50;\n}\n::placeholder {\n    color: #979189;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #363a00 !important;\n    color: #c5c3c1 !important;\n}\n::selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}\n::-moz-selection {\n    background-color: #004191 !important;\n    color: #c5c3c1 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 80,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 81,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 82,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 83,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(85%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 84,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(85%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 85,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 86,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 87,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 88,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #694700 !important;\n    border-color: #b79510 !important;\n    color: #cfc5aa !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0d313d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031b23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1302 !important;\n}\n.tou-6i3zyv {\n    background-color: #154a5c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 89,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #694700 !important;\n    border-color: #b79510 !important;\n    color: #cfc5aa !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0d313d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #031b23 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1e1302 !important;\n}\n.tou-6i3zyv {\n    background-color: #154a5c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 90,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 91,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #101213;\n   --darkreader-neutral-text: #b8b4b0;\n   --darkreader-selection-background: #004191;\n   --darkreader-selection-text: #c5c3c1;\n}</style>"
            }
        ]
    },
    {
        "mutation": 92,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #101213;\n   --darkreader-neutral-text: #b8b4b0;\n   --darkreader-selection-background: #004191;\n   --darkreader-selection-text: #c5c3c1;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 93,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 94,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 95,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 96,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 97,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 98,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(80%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1112;\n   --darkreader-neutral-text: #adaaa6;\n   --darkreader-selection-background: #003e88;\n   --darkreader-selection-text: #bab8b6;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #131516 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #131516;\n}\nhtml, body {\n    border-color: #5c564b;\n    color: #bab8b6;\n}\na {\n    color: #2974cc;\n}\ntable {\n    border-color: #43494b;\n}\n::placeholder {\n    color: #8e8981;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333600 !important;\n    color: #bab8b6 !important;\n}\n::selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}\n::-moz-selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #634300 !important;\n    border-color: #ad8d0f !important;\n    color: #c2baa0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0c2f3a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021a21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1102 !important;\n}\n.tou-6i3zyv {\n    background-color: #144657 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 99,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(80%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1112;\n   --darkreader-neutral-text: #adaaa6;\n   --darkreader-selection-background: #003e88;\n   --darkreader-selection-text: #bab8b6;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #131516 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #131516;\n}\nhtml, body {\n    border-color: #5c564b;\n    color: #bab8b6;\n}\na {\n    color: #2974cc;\n}\ntable {\n    border-color: #43494b;\n}\n::placeholder {\n    color: #8e8981;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333600 !important;\n    color: #bab8b6 !important;\n}\n::selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}\n::-moz-selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #634300 !important;\n    border-color: #ad8d0f !important;\n    color: #c2baa0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0c2f3a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021a21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1102 !important;\n}\n.tou-6i3zyv {\n    background-color: #144657 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 100,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(80%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1112;\n   --darkreader-neutral-text: #adaaa6;\n   --darkreader-selection-background: #003e88;\n   --darkreader-selection-text: #bab8b6;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #131516 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #131516;\n}\nhtml, body {\n    border-color: #5c564b;\n    color: #bab8b6;\n}\na {\n    color: #2974cc;\n}\ntable {\n    border-color: #43494b;\n}\n::placeholder {\n    color: #8e8981;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333600 !important;\n    color: #bab8b6 !important;\n}\n::selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}\n::-moz-selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #634300 !important;\n    border-color: #ad8d0f !important;\n    color: #c2baa0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0c2f3a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021a21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1102 !important;\n}\n.tou-6i3zyv {\n    background-color: #144657 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 101,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 102,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 103,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 104,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 105,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #131516 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #131516;\n}\nhtml, body {\n    border-color: #5c564b;\n    color: #bab8b6;\n}\na {\n    color: #2974cc;\n}\ntable {\n    border-color: #43494b;\n}\n::placeholder {\n    color: #8e8981;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333600 !important;\n    color: #bab8b6 !important;\n}\n::selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}\n::-moz-selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 106,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #131516 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #131516;\n}\nhtml, body {\n    border-color: #5c564b;\n    color: #bab8b6;\n}\na {\n    color: #2974cc;\n}\ntable {\n    border-color: #43494b;\n}\n::placeholder {\n    color: #8e8981;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333600 !important;\n    color: #bab8b6 !important;\n}\n::selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}\n::-moz-selection {\n    background-color: #003e88 !important;\n    color: #bab8b6 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 107,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 108,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 109,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 110,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(80%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 111,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(80%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 112,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 113,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 114,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 115,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #634300 !important;\n    border-color: #ad8d0f !important;\n    color: #c2baa0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0c2f3a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021a21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1102 !important;\n}\n.tou-6i3zyv {\n    background-color: #144657 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 116,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #634300 !important;\n    border-color: #ad8d0f !important;\n    color: #c2baa0 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0c2f3a !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021a21 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #080808 !important;\n}\n.tou-uknfeu {\n    background-color: #1c1102 !important;\n}\n.tou-6i3zyv {\n    background-color: #144657 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 117,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 118,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1112;\n   --darkreader-neutral-text: #adaaa6;\n   --darkreader-selection-background: #003e88;\n   --darkreader-selection-text: #bab8b6;\n}</style>"
            }
        ]
    },
    {
        "mutation": 119,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1112;\n   --darkreader-neutral-text: #adaaa6;\n   --darkreader-selection-background: #003e88;\n   --darkreader-selection-text: #bab8b6;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 120,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 121,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 122,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 123,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 124,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 125,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(75%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0e1010;\n   --darkreader-neutral-text: #a29f9b;\n   --darkreader-selection-background: #003a80;\n   --darkreader-selection-text: #aeadaa;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121414 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121414;\n}\nhtml, body {\n    border-color: #565047;\n    color: #aeadaa;\n}\na {\n    color: #266dbf;\n}\ntable {\n    border-color: #3f4447;\n}\n::placeholder {\n    color: #858079;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #303300 !important;\n    color: #aeadaa !important;\n}\n::selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}\n::-moz-selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c3e00 !important;\n    border-color: #a2840e !important;\n    color: #b6ae96 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2c36 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02181f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #1a1002 !important;\n}\n.tou-6i3zyv {\n    background-color: #134151 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 126,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(75%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0e1010;\n   --darkreader-neutral-text: #a29f9b;\n   --darkreader-selection-background: #003a80;\n   --darkreader-selection-text: #aeadaa;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121414 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121414;\n}\nhtml, body {\n    border-color: #565047;\n    color: #aeadaa;\n}\na {\n    color: #266dbf;\n}\ntable {\n    border-color: #3f4447;\n}\n::placeholder {\n    color: #858079;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #303300 !important;\n    color: #aeadaa !important;\n}\n::selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}\n::-moz-selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c3e00 !important;\n    border-color: #a2840e !important;\n    color: #b6ae96 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2c36 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02181f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #1a1002 !important;\n}\n.tou-6i3zyv {\n    background-color: #134151 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 127,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(75%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0e1010;\n   --darkreader-neutral-text: #a29f9b;\n   --darkreader-selection-background: #003a80;\n   --darkreader-selection-text: #aeadaa;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121414 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121414;\n}\nhtml, body {\n    border-color: #565047;\n    color: #aeadaa;\n}\na {\n    color: #266dbf;\n}\ntable {\n    border-color: #3f4447;\n}\n::placeholder {\n    color: #858079;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #303300 !important;\n    color: #aeadaa !important;\n}\n::selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}\n::-moz-selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c3e00 !important;\n    border-color: #a2840e !important;\n    color: #b6ae96 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2c36 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02181f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #1a1002 !important;\n}\n.tou-6i3zyv {\n    background-color: #134151 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 128,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 129,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 130,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 131,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 132,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121414 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121414;\n}\nhtml, body {\n    border-color: #565047;\n    color: #aeadaa;\n}\na {\n    color: #266dbf;\n}\ntable {\n    border-color: #3f4447;\n}\n::placeholder {\n    color: #858079;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #303300 !important;\n    color: #aeadaa !important;\n}\n::selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}\n::-moz-selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 133,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121414 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121414;\n}\nhtml, body {\n    border-color: #565047;\n    color: #aeadaa;\n}\na {\n    color: #266dbf;\n}\ntable {\n    border-color: #3f4447;\n}\n::placeholder {\n    color: #858079;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #303300 !important;\n    color: #aeadaa !important;\n}\n::selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}\n::-moz-selection {\n    background-color: #003a80 !important;\n    color: #aeadaa !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 134,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 135,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 136,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 137,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(75%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 138,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(75%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 139,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 140,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 141,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 142,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c3e00 !important;\n    border-color: #a2840e !important;\n    color: #b6ae96 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2c36 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02181f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #1a1002 !important;\n}\n.tou-6i3zyv {\n    background-color: #134151 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 143,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5c3e00 !important;\n    border-color: #a2840e !important;\n    color: #b6ae96 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2c36 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02181f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #1a1002 !important;\n}\n.tou-6i3zyv {\n    background-color: #134151 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 144,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 145,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0e1010;\n   --darkreader-neutral-text: #a29f9b;\n   --darkreader-selection-background: #003a80;\n   --darkreader-selection-text: #aeadaa;\n}</style>"
            }
        ]
    },
    {
        "mutation": 146,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0e1010;\n   --darkreader-neutral-text: #a29f9b;\n   --darkreader-selection-background: #003a80;\n   --darkreader-selection-text: #aeadaa;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 147,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 148,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 149,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 150,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 151,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 152,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(70%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0d0f0f;\n   --darkreader-neutral-text: #979491;\n   --darkreader-selection-background: #003677;\n   --darkreader-selection-text: #a2a19f;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #111213 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #111213;\n}\nhtml, body {\n    border-color: #514b42;\n    color: #a2a19f;\n}\na {\n    color: #2466b3;\n}\ntable {\n    border-color: #3b4042;\n}\n::placeholder {\n    color: #7d7871;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2d3000 !important;\n    color: #a2a19f !important;\n}\n::selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}\n::-moz-selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #563a00 !important;\n    border-color: #977b0d !important;\n    color: #aaa28c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2932 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02161d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #180f02 !important;\n}\n.tou-6i3zyv {\n    background-color: #123d4c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 153,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(70%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0d0f0f;\n   --darkreader-neutral-text: #979491;\n   --darkreader-selection-background: #003677;\n   --darkreader-selection-text: #a2a19f;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #111213 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #111213;\n}\nhtml, body {\n    border-color: #514b42;\n    color: #a2a19f;\n}\na {\n    color: #2466b3;\n}\ntable {\n    border-color: #3b4042;\n}\n::placeholder {\n    color: #7d7871;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2d3000 !important;\n    color: #a2a19f !important;\n}\n::selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}\n::-moz-selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #563a00 !important;\n    border-color: #977b0d !important;\n    color: #aaa28c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2932 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02161d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #180f02 !important;\n}\n.tou-6i3zyv {\n    background-color: #123d4c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 154,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(70%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0d0f0f;\n   --darkreader-neutral-text: #979491;\n   --darkreader-selection-background: #003677;\n   --darkreader-selection-text: #a2a19f;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #111213 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #111213;\n}\nhtml, body {\n    border-color: #514b42;\n    color: #a2a19f;\n}\na {\n    color: #2466b3;\n}\ntable {\n    border-color: #3b4042;\n}\n::placeholder {\n    color: #7d7871;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2d3000 !important;\n    color: #a2a19f !important;\n}\n::selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}\n::-moz-selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #563a00 !important;\n    border-color: #977b0d !important;\n    color: #aaa28c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2932 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02161d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #180f02 !important;\n}\n.tou-6i3zyv {\n    background-color: #123d4c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 155,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 156,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 157,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 158,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 159,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #111213 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #111213;\n}\nhtml, body {\n    border-color: #514b42;\n    color: #a2a19f;\n}\na {\n    color: #2466b3;\n}\ntable {\n    border-color: #3b4042;\n}\n::placeholder {\n    color: #7d7871;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2d3000 !important;\n    color: #a2a19f !important;\n}\n::selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}\n::-moz-selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 160,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #111213 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #111213;\n}\nhtml, body {\n    border-color: #514b42;\n    color: #a2a19f;\n}\na {\n    color: #2466b3;\n}\ntable {\n    border-color: #3b4042;\n}\n::placeholder {\n    color: #7d7871;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2d3000 !important;\n    color: #a2a19f !important;\n}\n::selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}\n::-moz-selection {\n    background-color: #003677 !important;\n    color: #a2a19f !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 161,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 162,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 163,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 164,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(70%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 165,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(70%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 166,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 167,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 168,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 169,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #563a00 !important;\n    border-color: #977b0d !important;\n    color: #aaa28c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2932 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02161d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #180f02 !important;\n}\n.tou-6i3zyv {\n    background-color: #123d4c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 170,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #563a00 !important;\n    border-color: #977b0d !important;\n    color: #aaa28c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0b2932 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02161d !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #070707 !important;\n}\n.tou-uknfeu {\n    background-color: #180f02 !important;\n}\n.tou-6i3zyv {\n    background-color: #123d4c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 171,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 172,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0d0f0f;\n   --darkreader-neutral-text: #979491;\n   --darkreader-selection-background: #003677;\n   --darkreader-selection-text: #a2a19f;\n}</style>"
            }
        ]
    },
    {
        "mutation": 173,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0d0f0f;\n   --darkreader-neutral-text: #979491;\n   --darkreader-selection-background: #003677;\n   --darkreader-selection-text: #a2a19f;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 174,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 175,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 176,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 177,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 178,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 179,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(65%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0c0e0e;\n   --darkreader-neutral-text: #8c8a87;\n   --darkreader-selection-background: #00326f;\n   --darkreader-selection-text: #979694;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #101112 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #101112;\n}\nhtml, body {\n    border-color: #4b463d;\n    color: #979694;\n}\na {\n    color: #215ea6;\n}\ntable {\n    border-color: #373b3d;\n}\n::placeholder {\n    color: #746f69;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2c00 !important;\n    color: #979694 !important;\n}\n::selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}\n::-moz-selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #503600 !important;\n    border-color: #8c720c !important;\n    color: #9e9782 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0a262f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02151b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #170e02 !important;\n}\n.tou-6i3zyv {\n    background-color: #103946 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 180,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(65%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0c0e0e;\n   --darkreader-neutral-text: #8c8a87;\n   --darkreader-selection-background: #00326f;\n   --darkreader-selection-text: #979694;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #101112 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #101112;\n}\nhtml, body {\n    border-color: #4b463d;\n    color: #979694;\n}\na {\n    color: #215ea6;\n}\ntable {\n    border-color: #373b3d;\n}\n::placeholder {\n    color: #746f69;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2c00 !important;\n    color: #979694 !important;\n}\n::selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}\n::-moz-selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #503600 !important;\n    border-color: #8c720c !important;\n    color: #9e9782 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0a262f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02151b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #170e02 !important;\n}\n.tou-6i3zyv {\n    background-color: #103946 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 181,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(65%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0c0e0e;\n   --darkreader-neutral-text: #8c8a87;\n   --darkreader-selection-background: #00326f;\n   --darkreader-selection-text: #979694;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #101112 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #101112;\n}\nhtml, body {\n    border-color: #4b463d;\n    color: #979694;\n}\na {\n    color: #215ea6;\n}\ntable {\n    border-color: #373b3d;\n}\n::placeholder {\n    color: #746f69;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2c00 !important;\n    color: #979694 !important;\n}\n::selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}\n::-moz-selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #503600 !important;\n    border-color: #8c720c !important;\n    color: #9e9782 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0a262f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02151b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #170e02 !important;\n}\n.tou-6i3zyv {\n    background-color: #103946 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 182,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 183,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 184,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 185,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 186,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #101112 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #101112;\n}\nhtml, body {\n    border-color: #4b463d;\n    color: #979694;\n}\na {\n    color: #215ea6;\n}\ntable {\n    border-color: #373b3d;\n}\n::placeholder {\n    color: #746f69;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2c00 !important;\n    color: #979694 !important;\n}\n::selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}\n::-moz-selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 187,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #101112 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #101112;\n}\nhtml, body {\n    border-color: #4b463d;\n    color: #979694;\n}\na {\n    color: #215ea6;\n}\ntable {\n    border-color: #373b3d;\n}\n::placeholder {\n    color: #746f69;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2c00 !important;\n    color: #979694 !important;\n}\n::selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}\n::-moz-selection {\n    background-color: #00326f !important;\n    color: #979694 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 188,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 189,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 190,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 191,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(65%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 192,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(65%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 193,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 194,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 195,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 196,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #503600 !important;\n    border-color: #8c720c !important;\n    color: #9e9782 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0a262f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02151b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #170e02 !important;\n}\n.tou-6i3zyv {\n    background-color: #103946 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 197,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #503600 !important;\n    border-color: #8c720c !important;\n    color: #9e9782 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0a262f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #02151b !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #170e02 !important;\n}\n.tou-6i3zyv {\n    background-color: #103946 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 198,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 199,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0c0e0e;\n   --darkreader-neutral-text: #8c8a87;\n   --darkreader-selection-background: #00326f;\n   --darkreader-selection-text: #979694;\n}</style>"
            }
        ]
    },
    {
        "mutation": 200,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0c0e0e;\n   --darkreader-neutral-text: #8c8a87;\n   --darkreader-selection-background: #00326f;\n   --darkreader-selection-text: #979694;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 201,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 202,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 203,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 204,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 205,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 206,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(60%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0b0d0d;\n   --darkreader-neutral-text: #827f7c;\n   --darkreader-selection-background: #002e66;\n   --darkreader-selection-text: #8b8a88;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0e1010 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0e1010;\n}\nhtml, body {\n    border-color: #454038;\n    color: #8b8a88;\n}\na {\n    color: #1f5799;\n}\ntable {\n    border-color: #323738;\n}\n::placeholder {\n    color: #6b6761;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #262900 !important;\n    color: #8b8a88 !important;\n}\n::selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}\n::-moz-selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4a3200 !important;\n    border-color: #826a0b !important;\n    color: #928b78 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #09232b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021319 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #150d02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0f3441 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 207,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(60%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0b0d0d;\n   --darkreader-neutral-text: #827f7c;\n   --darkreader-selection-background: #002e66;\n   --darkreader-selection-text: #8b8a88;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0e1010 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0e1010;\n}\nhtml, body {\n    border-color: #454038;\n    color: #8b8a88;\n}\na {\n    color: #1f5799;\n}\ntable {\n    border-color: #323738;\n}\n::placeholder {\n    color: #6b6761;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #262900 !important;\n    color: #8b8a88 !important;\n}\n::selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}\n::-moz-selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4a3200 !important;\n    border-color: #826a0b !important;\n    color: #928b78 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #09232b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021319 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #150d02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0f3441 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 208,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(60%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0b0d0d;\n   --darkreader-neutral-text: #827f7c;\n   --darkreader-selection-background: #002e66;\n   --darkreader-selection-text: #8b8a88;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0e1010 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0e1010;\n}\nhtml, body {\n    border-color: #454038;\n    color: #8b8a88;\n}\na {\n    color: #1f5799;\n}\ntable {\n    border-color: #323738;\n}\n::placeholder {\n    color: #6b6761;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #262900 !important;\n    color: #8b8a88 !important;\n}\n::selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}\n::-moz-selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4a3200 !important;\n    border-color: #826a0b !important;\n    color: #928b78 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #09232b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021319 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #150d02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0f3441 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 209,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 210,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 211,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 212,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 213,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0e1010 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0e1010;\n}\nhtml, body {\n    border-color: #454038;\n    color: #8b8a88;\n}\na {\n    color: #1f5799;\n}\ntable {\n    border-color: #323738;\n}\n::placeholder {\n    color: #6b6761;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #262900 !important;\n    color: #8b8a88 !important;\n}\n::selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}\n::-moz-selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 214,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0e1010 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0e1010;\n}\nhtml, body {\n    border-color: #454038;\n    color: #8b8a88;\n}\na {\n    color: #1f5799;\n}\ntable {\n    border-color: #323738;\n}\n::placeholder {\n    color: #6b6761;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #262900 !important;\n    color: #8b8a88 !important;\n}\n::selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}\n::-moz-selection {\n    background-color: #002e66 !important;\n    color: #8b8a88 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 215,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 216,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 217,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 218,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(60%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 219,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(60%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 220,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 221,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 222,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 223,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4a3200 !important;\n    border-color: #826a0b !important;\n    color: #928b78 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #09232b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021319 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #150d02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0f3441 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 224,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4a3200 !important;\n    border-color: #826a0b !important;\n    color: #928b78 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #09232b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021319 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #060606 !important;\n}\n.tou-uknfeu {\n    background-color: #150d02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0f3441 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 225,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 226,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0b0d0d;\n   --darkreader-neutral-text: #827f7c;\n   --darkreader-selection-background: #002e66;\n   --darkreader-selection-text: #8b8a88;\n}</style>"
            }
        ]
    },
    {
        "mutation": 227,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0b0d0d;\n   --darkreader-neutral-text: #827f7c;\n   --darkreader-selection-background: #002e66;\n   --darkreader-selection-text: #8b8a88;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 228,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 229,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 230,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 231,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 232,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 233,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(55%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0c0c;\n   --darkreader-neutral-text: #777572;\n   --darkreader-selection-background: #002a5e;\n   --darkreader-selection-text: #807f7d;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0d0e0f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0d0e0f;\n}\nhtml, body {\n    border-color: #3f3b34;\n    color: #807f7d;\n}\na {\n    color: #1c508c;\n}\ntable {\n    border-color: #2e3234;\n}\n::placeholder {\n    color: #625e59;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #232500 !important;\n    color: #807f7d !important;\n}\n::selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}\n::-moz-selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #442e00 !important;\n    border-color: #77610a !important;\n    color: #86806e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #082028 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021217 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #130c02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0e303b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 234,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(55%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0c0c;\n   --darkreader-neutral-text: #777572;\n   --darkreader-selection-background: #002a5e;\n   --darkreader-selection-text: #807f7d;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0d0e0f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0d0e0f;\n}\nhtml, body {\n    border-color: #3f3b34;\n    color: #807f7d;\n}\na {\n    color: #1c508c;\n}\ntable {\n    border-color: #2e3234;\n}\n::placeholder {\n    color: #625e59;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #232500 !important;\n    color: #807f7d !important;\n}\n::selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}\n::-moz-selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #442e00 !important;\n    border-color: #77610a !important;\n    color: #86806e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #082028 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021217 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #130c02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0e303b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 235,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(55%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0c0c;\n   --darkreader-neutral-text: #777572;\n   --darkreader-selection-background: #002a5e;\n   --darkreader-selection-text: #807f7d;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0d0e0f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0d0e0f;\n}\nhtml, body {\n    border-color: #3f3b34;\n    color: #807f7d;\n}\na {\n    color: #1c508c;\n}\ntable {\n    border-color: #2e3234;\n}\n::placeholder {\n    color: #625e59;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #232500 !important;\n    color: #807f7d !important;\n}\n::selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}\n::-moz-selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #442e00 !important;\n    border-color: #77610a !important;\n    color: #86806e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #082028 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021217 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #130c02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0e303b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 236,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 237,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 238,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 239,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 240,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0d0e0f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0d0e0f;\n}\nhtml, body {\n    border-color: #3f3b34;\n    color: #807f7d;\n}\na {\n    color: #1c508c;\n}\ntable {\n    border-color: #2e3234;\n}\n::placeholder {\n    color: #625e59;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #232500 !important;\n    color: #807f7d !important;\n}\n::selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}\n::-moz-selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 241,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0d0e0f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0d0e0f;\n}\nhtml, body {\n    border-color: #3f3b34;\n    color: #807f7d;\n}\na {\n    color: #1c508c;\n}\ntable {\n    border-color: #2e3234;\n}\n::placeholder {\n    color: #625e59;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #232500 !important;\n    color: #807f7d !important;\n}\n::selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}\n::-moz-selection {\n    background-color: #002a5e !important;\n    color: #807f7d !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 242,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 243,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 244,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 245,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(55%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 246,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(55%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 247,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 248,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 249,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 250,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #442e00 !important;\n    border-color: #77610a !important;\n    color: #86806e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #082028 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021217 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #130c02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0e303b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 251,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #442e00 !important;\n    border-color: #77610a !important;\n    color: #86806e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #082028 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021217 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #130c02 !important;\n}\n.tou-6i3zyv {\n    background-color: #0e303b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 252,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 253,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0c0c;\n   --darkreader-neutral-text: #777572;\n   --darkreader-selection-background: #002a5e;\n   --darkreader-selection-text: #807f7d;\n}</style>"
            }
        ]
    },
    {
        "mutation": 254,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0c0c;\n   --darkreader-neutral-text: #777572;\n   --darkreader-selection-background: #002a5e;\n   --darkreader-selection-text: #807f7d;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 255,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 256,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 257,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 258,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 259,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 260,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0b0b;\n   --darkreader-neutral-text: #6c6a68;\n   --darkreader-selection-background: #002755;\n   --darkreader-selection-text: #747372;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0c0d0e !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0c0d0e;\n}\nhtml, body {\n    border-color: #3a362f;\n    color: #747372;\n}\na {\n    color: #1a4980;\n}\ntable {\n    border-color: #2a2e2f;\n}\n::placeholder {\n    color: #595651;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #202200 !important;\n    color: #747372 !important;\n}\n::selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}\n::-moz-selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #3e2a00 !important;\n    border-color: #6c5809 !important;\n    color: #797464 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #081d24 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021015 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #110b01 !important;\n}\n.tou-6i3zyv {\n    background-color: #0d2c36 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 261,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0b0b;\n   --darkreader-neutral-text: #6c6a68;\n   --darkreader-selection-background: #002755;\n   --darkreader-selection-text: #747372;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0c0d0e !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0c0d0e;\n}\nhtml, body {\n    border-color: #3a362f;\n    color: #747372;\n}\na {\n    color: #1a4980;\n}\ntable {\n    border-color: #2a2e2f;\n}\n::placeholder {\n    color: #595651;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #202200 !important;\n    color: #747372 !important;\n}\n::selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}\n::-moz-selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #3e2a00 !important;\n    border-color: #6c5809 !important;\n    color: #797464 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #081d24 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021015 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #110b01 !important;\n}\n.tou-6i3zyv {\n    background-color: #0d2c36 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 262,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0b0b;\n   --darkreader-neutral-text: #6c6a68;\n   --darkreader-selection-background: #002755;\n   --darkreader-selection-text: #747372;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0c0d0e !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0c0d0e;\n}\nhtml, body {\n    border-color: #3a362f;\n    color: #747372;\n}\na {\n    color: #1a4980;\n}\ntable {\n    border-color: #2a2e2f;\n}\n::placeholder {\n    color: #595651;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #202200 !important;\n    color: #747372 !important;\n}\n::selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}\n::-moz-selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #3e2a00 !important;\n    border-color: #6c5809 !important;\n    color: #797464 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #081d24 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021015 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #110b01 !important;\n}\n.tou-6i3zyv {\n    background-color: #0d2c36 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 263,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 264,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 265,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 266,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 267,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0c0d0e !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0c0d0e;\n}\nhtml, body {\n    border-color: #3a362f;\n    color: #747372;\n}\na {\n    color: #1a4980;\n}\ntable {\n    border-color: #2a2e2f;\n}\n::placeholder {\n    color: #595651;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #202200 !important;\n    color: #747372 !important;\n}\n::selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}\n::-moz-selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 268,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #0c0d0e !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #0c0d0e;\n}\nhtml, body {\n    border-color: #3a362f;\n    color: #747372;\n}\na {\n    color: #1a4980;\n}\ntable {\n    border-color: #2a2e2f;\n}\n::placeholder {\n    color: #595651;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #202200 !important;\n    color: #747372 !important;\n}\n::selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}\n::-moz-selection {\n    background-color: #002755 !important;\n    color: #747372 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 269,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 270,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 271,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 272,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(90%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 273,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 274,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 275,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 276,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 277,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #3e2a00 !important;\n    border-color: #6c5809 !important;\n    color: #797464 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #081d24 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021015 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #110b01 !important;\n}\n.tou-6i3zyv {\n    background-color: #0d2c36 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 278,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #3e2a00 !important;\n    border-color: #6c5809 !important;\n    color: #797464 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #081d24 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #021015 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #050505 !important;\n}\n.tou-uknfeu {\n    background-color: #110b01 !important;\n}\n.tou-6i3zyv {\n    background-color: #0d2c36 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 279,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 280,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0b0b;\n   --darkreader-neutral-text: #6c6a68;\n   --darkreader-selection-background: #002755;\n   --darkreader-selection-text: #747372;\n}</style>"
            }
        ]
    },
    {
        "mutation": 281,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0a0b0b;\n   --darkreader-neutral-text: #6c6a68;\n   --darkreader-selection-background: #002755;\n   --darkreader-selection-text: #747372;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 282,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 283,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 284,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 285,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 286,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 287,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1011;\n   --darkreader-neutral-text: #6d6b69;\n   --darkreader-selection-background: #062b57;\n   --darkreader-selection-text: #757472;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121313 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121313;\n}\nhtml, body {\n    border-color: #3d3933;\n    color: #757472;\n}\na {\n    color: #1f4b80;\n}\ntable {\n    border-color: #2e3233;\n}\n::placeholder {\n    color: #5b5853;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #252706 !important;\n    color: #757472 !important;\n}\n::selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}\n::-moz-selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #412e00 !important;\n    border-color: #6d5a0f !important;\n    color: #7a7565 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e2229 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #08161a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0b !important;\n}\n.tou-uknfeu {\n    background-color: #171108 !important;\n}\n.tou-6i3zyv {\n    background-color: #12303a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 288,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1011;\n   --darkreader-neutral-text: #6d6b69;\n   --darkreader-selection-background: #062b57;\n   --darkreader-selection-text: #757472;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121313 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121313;\n}\nhtml, body {\n    border-color: #3d3933;\n    color: #757472;\n}\na {\n    color: #1f4b80;\n}\ntable {\n    border-color: #2e3233;\n}\n::placeholder {\n    color: #5b5853;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #252706 !important;\n    color: #757472 !important;\n}\n::selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}\n::-moz-selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #412e00 !important;\n    border-color: #6d5a0f !important;\n    color: #7a7565 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e2229 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #08161a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0b !important;\n}\n.tou-uknfeu {\n    background-color: #171108 !important;\n}\n.tou-6i3zyv {\n    background-color: #12303a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 289,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(85%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1011;\n   --darkreader-neutral-text: #6d6b69;\n   --darkreader-selection-background: #062b57;\n   --darkreader-selection-text: #757472;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121313 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121313;\n}\nhtml, body {\n    border-color: #3d3933;\n    color: #757472;\n}\na {\n    color: #1f4b80;\n}\ntable {\n    border-color: #2e3233;\n}\n::placeholder {\n    color: #5b5853;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #252706 !important;\n    color: #757472 !important;\n}\n::selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}\n::-moz-selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #412e00 !important;\n    border-color: #6d5a0f !important;\n    color: #7a7565 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e2229 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #08161a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0b !important;\n}\n.tou-uknfeu {\n    background-color: #171108 !important;\n}\n.tou-6i3zyv {\n    background-color: #12303a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 290,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 291,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 292,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 293,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 294,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121313 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121313;\n}\nhtml, body {\n    border-color: #3d3933;\n    color: #757472;\n}\na {\n    color: #1f4b80;\n}\ntable {\n    border-color: #2e3233;\n}\n::placeholder {\n    color: #5b5853;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #252706 !important;\n    color: #757472 !important;\n}\n::selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}\n::-moz-selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 295,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #121313 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #121313;\n}\nhtml, body {\n    border-color: #3d3933;\n    color: #757472;\n}\na {\n    color: #1f4b80;\n}\ntable {\n    border-color: #2e3233;\n}\n::placeholder {\n    color: #5b5853;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #252706 !important;\n    color: #757472 !important;\n}\n::selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}\n::-moz-selection {\n    background-color: #062b57 !important;\n    color: #757472 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 296,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 297,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 298,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 299,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(85%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 300,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(85%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 301,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 302,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 303,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 304,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #412e00 !important;\n    border-color: #6d5a0f !important;\n    color: #7a7565 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e2229 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #08161a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0b !important;\n}\n.tou-uknfeu {\n    background-color: #171108 !important;\n}\n.tou-6i3zyv {\n    background-color: #12303a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 305,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #412e00 !important;\n    border-color: #6d5a0f !important;\n    color: #7a7565 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0e2229 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #08161a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0b0b0b !important;\n}\n.tou-uknfeu {\n    background-color: #171108 !important;\n}\n.tou-6i3zyv {\n    background-color: #12303a !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 306,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 307,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1011;\n   --darkreader-neutral-text: #6d6b69;\n   --darkreader-selection-background: #062b57;\n   --darkreader-selection-text: #757472;\n}</style>"
            }
        ]
    },
    {
        "mutation": 308,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #0f1011;\n   --darkreader-neutral-text: #6d6b69;\n   --darkreader-selection-background: #062b57;\n   --darkreader-selection-text: #757472;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 309,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 310,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 311,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 312,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 313,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 314,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151617;\n   --darkreader-neutral-text: #6e6c6a;\n   --darkreader-selection-background: #0d2f59;\n   --darkreader-selection-text: #757473;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181819 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181819;\n}\nhtml, body {\n    border-color: #413d37;\n    color: #757473;\n}\na {\n    color: #244e80;\n}\ntable {\n    border-color: #333637;\n}\n::placeholder {\n    color: #5d5a55;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2b0d !important;\n    color: #757473 !important;\n}\n::selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}\n::-moz-selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #443203 !important;\n    border-color: #6e5c15 !important;\n    color: #7a7567 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #14272d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1b1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #111111 !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #18343d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 315,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151617;\n   --darkreader-neutral-text: #6e6c6a;\n   --darkreader-selection-background: #0d2f59;\n   --darkreader-selection-text: #757473;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181819 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181819;\n}\nhtml, body {\n    border-color: #413d37;\n    color: #757473;\n}\na {\n    color: #244e80;\n}\ntable {\n    border-color: #333637;\n}\n::placeholder {\n    color: #5d5a55;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2b0d !important;\n    color: #757473 !important;\n}\n::selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}\n::-moz-selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #443203 !important;\n    border-color: #6e5c15 !important;\n    color: #7a7567 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #14272d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1b1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #111111 !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #18343d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 316,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(80%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151617;\n   --darkreader-neutral-text: #6e6c6a;\n   --darkreader-selection-background: #0d2f59;\n   --darkreader-selection-text: #757473;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181819 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181819;\n}\nhtml, body {\n    border-color: #413d37;\n    color: #757473;\n}\na {\n    color: #244e80;\n}\ntable {\n    border-color: #333637;\n}\n::placeholder {\n    color: #5d5a55;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2b0d !important;\n    color: #757473 !important;\n}\n::selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}\n::-moz-selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #443203 !important;\n    border-color: #6e5c15 !important;\n    color: #7a7567 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #14272d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1b1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #111111 !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #18343d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 317,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 318,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 319,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 320,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 321,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181819 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181819;\n}\nhtml, body {\n    border-color: #413d37;\n    color: #757473;\n}\na {\n    color: #244e80;\n}\ntable {\n    border-color: #333637;\n}\n::placeholder {\n    color: #5d5a55;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2b0d !important;\n    color: #757473 !important;\n}\n::selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}\n::-moz-selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 322,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181819 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181819;\n}\nhtml, body {\n    border-color: #413d37;\n    color: #757473;\n}\na {\n    color: #244e80;\n}\ntable {\n    border-color: #333637;\n}\n::placeholder {\n    color: #5d5a55;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2a2b0d !important;\n    color: #757473 !important;\n}\n::selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}\n::-moz-selection {\n    background-color: #0d2f59 !important;\n    color: #757473 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 323,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 324,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 325,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 326,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(80%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 327,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(80%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 328,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 329,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 330,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 331,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #443203 !important;\n    border-color: #6e5c15 !important;\n    color: #7a7567 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #14272d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1b1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #111111 !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #18343d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 332,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #443203 !important;\n    border-color: #6e5c15 !important;\n    color: #7a7567 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #14272d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #0e1b1f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #111111 !important;\n}\n.tou-uknfeu {\n    background-color: #1c170e !important;\n}\n.tou-6i3zyv {\n    background-color: #18343d !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 333,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 334,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151617;\n   --darkreader-neutral-text: #6e6c6a;\n   --darkreader-selection-background: #0d2f59;\n   --darkreader-selection-text: #757473;\n}</style>"
            }
        ]
    },
    {
        "mutation": 335,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #151617;\n   --darkreader-neutral-text: #6e6c6a;\n   --darkreader-selection-background: #0d2f59;\n   --darkreader-selection-text: #757473;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 336,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 337,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 338,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 339,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 340,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 341,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1c1c;\n   --darkreader-neutral-text: #6f6d6b;\n   --darkreader-selection-background: #13345b;\n   --darkreader-selection-text: #767574;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1e1f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1e1f;\n}\nhtml, body {\n    border-color: #44413b;\n    color: #767574;\n}\na {\n    color: #295180;\n}\ntable {\n    border-color: #373a3b;\n}\n::placeholder {\n    color: #5f5c58;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2e3013 !important;\n    color: #767574 !important;\n}\n::selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}\n::-moz-selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #47360a !important;\n    border-color: #6f5e1b !important;\n    color: #7a7668 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a2c32 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #142125 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #171717 !important;\n}\n.tou-uknfeu {\n    background-color: #221c14 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e3841 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 342,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1c1c;\n   --darkreader-neutral-text: #6f6d6b;\n   --darkreader-selection-background: #13345b;\n   --darkreader-selection-text: #767574;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1e1f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1e1f;\n}\nhtml, body {\n    border-color: #44413b;\n    color: #767574;\n}\na {\n    color: #295180;\n}\ntable {\n    border-color: #373a3b;\n}\n::placeholder {\n    color: #5f5c58;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2e3013 !important;\n    color: #767574 !important;\n}\n::selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}\n::-moz-selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #47360a !important;\n    border-color: #6f5e1b !important;\n    color: #7a7668 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a2c32 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #142125 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #171717 !important;\n}\n.tou-uknfeu {\n    background-color: #221c14 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e3841 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 343,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(75%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1c1c;\n   --darkreader-neutral-text: #6f6d6b;\n   --darkreader-selection-background: #13345b;\n   --darkreader-selection-text: #767574;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1e1f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1e1f;\n}\nhtml, body {\n    border-color: #44413b;\n    color: #767574;\n}\na {\n    color: #295180;\n}\ntable {\n    border-color: #373a3b;\n}\n::placeholder {\n    color: #5f5c58;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2e3013 !important;\n    color: #767574 !important;\n}\n::selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}\n::-moz-selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #47360a !important;\n    border-color: #6f5e1b !important;\n    color: #7a7668 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a2c32 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #142125 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #171717 !important;\n}\n.tou-uknfeu {\n    background-color: #221c14 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e3841 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 344,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 345,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 346,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 347,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 348,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1e1f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1e1f;\n}\nhtml, body {\n    border-color: #44413b;\n    color: #767574;\n}\na {\n    color: #295180;\n}\ntable {\n    border-color: #373a3b;\n}\n::placeholder {\n    color: #5f5c58;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2e3013 !important;\n    color: #767574 !important;\n}\n::selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}\n::-moz-selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 349,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #1d1e1f !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #1d1e1f;\n}\nhtml, body {\n    border-color: #44413b;\n    color: #767574;\n}\na {\n    color: #295180;\n}\ntable {\n    border-color: #373a3b;\n}\n::placeholder {\n    color: #5f5c58;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #2e3013 !important;\n    color: #767574 !important;\n}\n::selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}\n::-moz-selection {\n    background-color: #13345b !important;\n    color: #767574 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 350,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 351,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 352,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 353,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(75%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 354,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(75%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 355,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 356,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 357,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 358,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #47360a !important;\n    border-color: #6f5e1b !important;\n    color: #7a7668 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a2c32 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #142125 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #171717 !important;\n}\n.tou-uknfeu {\n    background-color: #221c14 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e3841 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 359,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #47360a !important;\n    border-color: #6f5e1b !important;\n    color: #7a7668 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #1a2c32 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #142125 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #171717 !important;\n}\n.tou-uknfeu {\n    background-color: #221c14 !important;\n}\n.tou-6i3zyv {\n    background-color: #1e3841 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 360,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 361,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1c1c;\n   --darkreader-neutral-text: #6f6d6b;\n   --darkreader-selection-background: #13345b;\n   --darkreader-selection-text: #767574;\n}</style>"
            }
        ]
    },
    {
        "mutation": 362,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #1b1c1c;\n   --darkreader-neutral-text: #6f6d6b;\n   --darkreader-selection-background: #13345b;\n   --darkreader-selection-text: #767574;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 363,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 364,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 365,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 366,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 367,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 368,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #212222;\n   --darkreader-neutral-text: #706e6c;\n   --darkreader-selection-background: #19385e;\n   --darkreader-selection-text: #767674;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #232424 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #232424;\n}\nhtml, body {\n    border-color: #48443f;\n    color: #767674;\n}\na {\n    color: #2e5380;\n}\ntable {\n    border-color: #3b3e3f;\n}\n::placeholder {\n    color: #615e5a;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333519 !important;\n    color: #767674 !important;\n}\n::selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}\n::-moz-selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4b3b11 !important;\n    border-color: #706021 !important;\n    color: #7b7669 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #203136 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b262a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #1d1d1d !important;\n}\n.tou-uknfeu {\n    background-color: #27221b !important;\n}\n.tou-6i3zyv {\n    background-color: #243c45 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 369,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #212222;\n   --darkreader-neutral-text: #706e6c;\n   --darkreader-selection-background: #19385e;\n   --darkreader-selection-text: #767674;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #232424 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #232424;\n}\nhtml, body {\n    border-color: #48443f;\n    color: #767674;\n}\na {\n    color: #2e5380;\n}\ntable {\n    border-color: #3b3e3f;\n}\n::placeholder {\n    color: #615e5a;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333519 !important;\n    color: #767674 !important;\n}\n::selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}\n::-moz-selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4b3b11 !important;\n    border-color: #706021 !important;\n    color: #7b7669 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #203136 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b262a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #1d1d1d !important;\n}\n.tou-uknfeu {\n    background-color: #27221b !important;\n}\n.tou-6i3zyv {\n    background-color: #243c45 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 370,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(70%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #212222;\n   --darkreader-neutral-text: #706e6c;\n   --darkreader-selection-background: #19385e;\n   --darkreader-selection-text: #767674;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #232424 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #232424;\n}\nhtml, body {\n    border-color: #48443f;\n    color: #767674;\n}\na {\n    color: #2e5380;\n}\ntable {\n    border-color: #3b3e3f;\n}\n::placeholder {\n    color: #615e5a;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333519 !important;\n    color: #767674 !important;\n}\n::selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}\n::-moz-selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4b3b11 !important;\n    border-color: #706021 !important;\n    color: #7b7669 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #203136 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b262a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #1d1d1d !important;\n}\n.tou-uknfeu {\n    background-color: #27221b !important;\n}\n.tou-6i3zyv {\n    background-color: #243c45 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 371,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 372,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 373,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 374,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 375,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #232424 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #232424;\n}\nhtml, body {\n    border-color: #48443f;\n    color: #767674;\n}\na {\n    color: #2e5380;\n}\ntable {\n    border-color: #3b3e3f;\n}\n::placeholder {\n    color: #615e5a;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333519 !important;\n    color: #767674 !important;\n}\n::selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}\n::-moz-selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 376,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #232424 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #232424;\n}\nhtml, body {\n    border-color: #48443f;\n    color: #767674;\n}\na {\n    color: #2e5380;\n}\ntable {\n    border-color: #3b3e3f;\n}\n::placeholder {\n    color: #615e5a;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #333519 !important;\n    color: #767674 !important;\n}\n::selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}\n::-moz-selection {\n    background-color: #19385e !important;\n    color: #767674 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 377,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 378,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 379,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 380,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(70%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 381,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(70%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 382,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 383,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 384,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 385,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4b3b11 !important;\n    border-color: #706021 !important;\n    color: #7b7669 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #203136 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b262a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #1d1d1d !important;\n}\n.tou-uknfeu {\n    background-color: #27221b !important;\n}\n.tou-6i3zyv {\n    background-color: #243c45 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 386,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4b3b11 !important;\n    border-color: #706021 !important;\n    color: #7b7669 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #203136 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #1b262a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #1d1d1d !important;\n}\n.tou-uknfeu {\n    background-color: #27221b !important;\n}\n.tou-6i3zyv {\n    background-color: #243c45 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 387,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 388,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #212222;\n   --darkreader-neutral-text: #706e6c;\n   --darkreader-selection-background: #19385e;\n   --darkreader-selection-text: #767674;\n}</style>"
            }
        ]
    },
    {
        "mutation": 389,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #212222;\n   --darkreader-neutral-text: #706e6c;\n   --darkreader-selection-background: #19385e;\n   --darkreader-selection-text: #767674;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 390,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 391,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 392,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 393,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 394,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 395,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #272828;\n   --darkreader-neutral-text: #716f6e;\n   --darkreader-selection-background: #203d60;\n   --darkreader-selection-text: #777675;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #292a2a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #292a2a;\n}\nhtml, body {\n    border-color: #4b4843;\n    color: #777675;\n}\na {\n    color: #335680;\n}\ntable {\n    border-color: #3f4243;\n}\n::placeholder {\n    color: #63605c;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #383920 !important;\n    color: #777675 !important;\n}\n::selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}\n::-moz-selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4e3f18 !important;\n    border-color: #716227 !important;\n    color: #7b776b !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26363b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #212c2f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #242424 !important;\n}\n.tou-uknfeu {\n    background-color: #2d2821 !important;\n}\n.tou-6i3zyv {\n    background-color: #294148 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 396,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #272828;\n   --darkreader-neutral-text: #716f6e;\n   --darkreader-selection-background: #203d60;\n   --darkreader-selection-text: #777675;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #292a2a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #292a2a;\n}\nhtml, body {\n    border-color: #4b4843;\n    color: #777675;\n}\na {\n    color: #335680;\n}\ntable {\n    border-color: #3f4243;\n}\n::placeholder {\n    color: #63605c;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #383920 !important;\n    color: #777675 !important;\n}\n::selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}\n::-moz-selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4e3f18 !important;\n    border-color: #716227 !important;\n    color: #7b776b !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26363b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #212c2f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #242424 !important;\n}\n.tou-uknfeu {\n    background-color: #2d2821 !important;\n}\n.tou-6i3zyv {\n    background-color: #294148 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 397,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(65%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #272828;\n   --darkreader-neutral-text: #716f6e;\n   --darkreader-selection-background: #203d60;\n   --darkreader-selection-text: #777675;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #292a2a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #292a2a;\n}\nhtml, body {\n    border-color: #4b4843;\n    color: #777675;\n}\na {\n    color: #335680;\n}\ntable {\n    border-color: #3f4243;\n}\n::placeholder {\n    color: #63605c;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #383920 !important;\n    color: #777675 !important;\n}\n::selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}\n::-moz-selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4e3f18 !important;\n    border-color: #716227 !important;\n    color: #7b776b !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26363b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #212c2f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #242424 !important;\n}\n.tou-uknfeu {\n    background-color: #2d2821 !important;\n}\n.tou-6i3zyv {\n    background-color: #294148 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 398,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 399,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 400,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 401,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 402,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #292a2a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #292a2a;\n}\nhtml, body {\n    border-color: #4b4843;\n    color: #777675;\n}\na {\n    color: #335680;\n}\ntable {\n    border-color: #3f4243;\n}\n::placeholder {\n    color: #63605c;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #383920 !important;\n    color: #777675 !important;\n}\n::selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}\n::-moz-selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 403,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #292a2a !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #292a2a;\n}\nhtml, body {\n    border-color: #4b4843;\n    color: #777675;\n}\na {\n    color: #335680;\n}\ntable {\n    border-color: #3f4243;\n}\n::placeholder {\n    color: #63605c;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #383920 !important;\n    color: #777675 !important;\n}\n::selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}\n::-moz-selection {\n    background-color: #203d60 !important;\n    color: #777675 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 404,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 405,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 406,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 407,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(65%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 408,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(65%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 409,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 410,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 411,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 412,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4e3f18 !important;\n    border-color: #716227 !important;\n    color: #7b776b !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26363b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #212c2f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #242424 !important;\n}\n.tou-uknfeu {\n    background-color: #2d2821 !important;\n}\n.tou-6i3zyv {\n    background-color: #294148 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 413,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #4e3f18 !important;\n    border-color: #716227 !important;\n    color: #7b776b !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #26363b !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #212c2f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #242424 !important;\n}\n.tou-uknfeu {\n    background-color: #2d2821 !important;\n}\n.tou-6i3zyv {\n    background-color: #294148 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 414,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 415,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #272828;\n   --darkreader-neutral-text: #716f6e;\n   --darkreader-selection-background: #203d60;\n   --darkreader-selection-text: #777675;\n}</style>"
            }
        ]
    },
    {
        "mutation": 416,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #272828;\n   --darkreader-neutral-text: #716f6e;\n   --darkreader-selection-background: #203d60;\n   --darkreader-selection-text: #777675;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 417,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 418,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 419,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 420,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 421,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 422,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #2d2e2e;\n   --darkreader-neutral-text: #72706f;\n   --darkreader-selection-background: #264162;\n   --darkreader-selection-text: #777776;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #2f2f30 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #2f2f30;\n}\nhtml, body {\n    border-color: #4f4c47;\n    color: #777776;\n}\na {\n    color: #385980;\n}\ntable {\n    border-color: #444647;\n}\n::placeholder {\n    color: #65625f;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d3e26 !important;\n    color: #777776 !important;\n}\n::selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}\n::-moz-selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #51431f !important;\n    border-color: #72642d !important;\n    color: #7b776c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2c3b3f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #273135 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #2a2a2a !important;\n}\n.tou-uknfeu {\n    background-color: #322e27 !important;\n}\n.tou-6i3zyv {\n    background-color: #2f454c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 423,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #2d2e2e;\n   --darkreader-neutral-text: #72706f;\n   --darkreader-selection-background: #264162;\n   --darkreader-selection-text: #777776;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #2f2f30 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #2f2f30;\n}\nhtml, body {\n    border-color: #4f4c47;\n    color: #777776;\n}\na {\n    color: #385980;\n}\ntable {\n    border-color: #444647;\n}\n::placeholder {\n    color: #65625f;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d3e26 !important;\n    color: #777776 !important;\n}\n::selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}\n::-moz-selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #51431f !important;\n    border-color: #72642d !important;\n    color: #7b776c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2c3b3f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #273135 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #2a2a2a !important;\n}\n.tou-uknfeu {\n    background-color: #322e27 !important;\n}\n.tou-6i3zyv {\n    background-color: #2f454c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 424,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(60%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #2d2e2e;\n   --darkreader-neutral-text: #72706f;\n   --darkreader-selection-background: #264162;\n   --darkreader-selection-text: #777776;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #2f2f30 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #2f2f30;\n}\nhtml, body {\n    border-color: #4f4c47;\n    color: #777776;\n}\na {\n    color: #385980;\n}\ntable {\n    border-color: #444647;\n}\n::placeholder {\n    color: #65625f;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d3e26 !important;\n    color: #777776 !important;\n}\n::selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}\n::-moz-selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #51431f !important;\n    border-color: #72642d !important;\n    color: #7b776c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2c3b3f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #273135 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #2a2a2a !important;\n}\n.tou-uknfeu {\n    background-color: #322e27 !important;\n}\n.tou-6i3zyv {\n    background-color: #2f454c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 425,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 426,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 427,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 428,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 429,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #2f2f30 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #2f2f30;\n}\nhtml, body {\n    border-color: #4f4c47;\n    color: #777776;\n}\na {\n    color: #385980;\n}\ntable {\n    border-color: #444647;\n}\n::placeholder {\n    color: #65625f;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d3e26 !important;\n    color: #777776 !important;\n}\n::selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}\n::-moz-selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 430,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #2f2f30 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #2f2f30;\n}\nhtml, body {\n    border-color: #4f4c47;\n    color: #777776;\n}\na {\n    color: #385980;\n}\ntable {\n    border-color: #444647;\n}\n::placeholder {\n    color: #65625f;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #3d3e26 !important;\n    color: #777776 !important;\n}\n::selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}\n::-moz-selection {\n    background-color: #264162 !important;\n    color: #777776 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 431,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 432,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 433,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 434,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(60%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 435,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(60%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 436,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 437,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 438,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 439,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #51431f !important;\n    border-color: #72642d !important;\n    color: #7b776c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2c3b3f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #273135 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #2a2a2a !important;\n}\n.tou-uknfeu {\n    background-color: #322e27 !important;\n}\n.tou-6i3zyv {\n    background-color: #2f454c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 440,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #51431f !important;\n    border-color: #72642d !important;\n    color: #7b776c !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #2c3b3f !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #273135 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #2a2a2a !important;\n}\n.tou-uknfeu {\n    background-color: #322e27 !important;\n}\n.tou-6i3zyv {\n    background-color: #2f454c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 441,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 442,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #2d2e2e;\n   --darkreader-neutral-text: #72706f;\n   --darkreader-selection-background: #264162;\n   --darkreader-selection-text: #777776;\n}</style>"
            }
        ]
    },
    {
        "mutation": 443,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #2d2e2e;\n   --darkreader-neutral-text: #72706f;\n   --darkreader-selection-background: #264162;\n   --darkreader-selection-text: #777776;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 444,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 445,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 446,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 447,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 448,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 449,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #333334;\n   --darkreader-neutral-text: #737270;\n   --darkreader-selection-background: #2d4664;\n   --darkreader-selection-text: #787776;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #343535 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #343535;\n}\nhtml, body {\n    border-color: #524f4b;\n    color: #787776;\n}\na {\n    color: #3d5c80;\n}\ntable {\n    border-color: #484a4b;\n}\n::placeholder {\n    color: #666461;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #41432d !important;\n    color: #787776 !important;\n}\n::selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}\n::-moz-selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #554826 !important;\n    border-color: #736633 !important;\n    color: #7c786e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #324044 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #2e373a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #303030 !important;\n}\n.tou-uknfeu {\n    background-color: #38342e !important;\n}\n.tou-6i3zyv {\n    background-color: #354950 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 450,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #333334;\n   --darkreader-neutral-text: #737270;\n   --darkreader-selection-background: #2d4664;\n   --darkreader-selection-text: #787776;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #343535 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #343535;\n}\nhtml, body {\n    border-color: #524f4b;\n    color: #787776;\n}\na {\n    color: #3d5c80;\n}\ntable {\n    border-color: #484a4b;\n}\n::placeholder {\n    color: #666461;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #41432d !important;\n    color: #787776 !important;\n}\n::selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}\n::-moz-selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #554826 !important;\n    border-color: #736633 !important;\n    color: #7c786e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #324044 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #2e373a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #303030 !important;\n}\n.tou-uknfeu {\n    background-color: #38342e !important;\n}\n.tou-6i3zyv {\n    background-color: #354950 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 451,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(55%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #333334;\n   --darkreader-neutral-text: #737270;\n   --darkreader-selection-background: #2d4664;\n   --darkreader-selection-text: #787776;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #343535 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #343535;\n}\nhtml, body {\n    border-color: #524f4b;\n    color: #787776;\n}\na {\n    color: #3d5c80;\n}\ntable {\n    border-color: #484a4b;\n}\n::placeholder {\n    color: #666461;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #41432d !important;\n    color: #787776 !important;\n}\n::selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}\n::-moz-selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #554826 !important;\n    border-color: #736633 !important;\n    color: #7c786e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #324044 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #2e373a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #303030 !important;\n}\n.tou-uknfeu {\n    background-color: #38342e !important;\n}\n.tou-6i3zyv {\n    background-color: #354950 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 452,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 453,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 454,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 455,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 456,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #343535 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #343535;\n}\nhtml, body {\n    border-color: #524f4b;\n    color: #787776;\n}\na {\n    color: #3d5c80;\n}\ntable {\n    border-color: #484a4b;\n}\n::placeholder {\n    color: #666461;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #41432d !important;\n    color: #787776 !important;\n}\n::selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}\n::-moz-selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 457,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #343535 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #343535;\n}\nhtml, body {\n    border-color: #524f4b;\n    color: #787776;\n}\na {\n    color: #3d5c80;\n}\ntable {\n    border-color: #484a4b;\n}\n::placeholder {\n    color: #666461;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #41432d !important;\n    color: #787776 !important;\n}\n::selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}\n::-moz-selection {\n    background-color: #2d4664 !important;\n    color: #787776 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 458,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 459,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 460,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 461,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(55%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 462,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(55%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 463,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 464,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 465,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 466,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #554826 !important;\n    border-color: #736633 !important;\n    color: #7c786e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #324044 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #2e373a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #303030 !important;\n}\n.tou-uknfeu {\n    background-color: #38342e !important;\n}\n.tou-6i3zyv {\n    background-color: #354950 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 467,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #554826 !important;\n    border-color: #736633 !important;\n    color: #7c786e !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #324044 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #2e373a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #303030 !important;\n}\n.tou-uknfeu {\n    background-color: #38342e !important;\n}\n.tou-6i3zyv {\n    background-color: #354950 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 468,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 469,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #333334;\n   --darkreader-neutral-text: #737270;\n   --darkreader-selection-background: #2d4664;\n   --darkreader-selection-text: #787776;\n}</style>"
            }
        ]
    },
    {
        "mutation": 470,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #333334;\n   --darkreader-neutral-text: #737270;\n   --darkreader-selection-background: #2d4664;\n   --darkreader-selection-text: #787776;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 471,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 472,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 473,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 474,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 475,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 476,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #39393a;\n   --darkreader-neutral-text: #747371;\n   --darkreader-selection-background: #334a66;\n   --darkreader-selection-text: #797877;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #3a3b3b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #3a3b3b;\n}\nhtml, body {\n    border-color: #56534f;\n    color: #797877;\n}\na {\n    color: #425f80;\n}\ntable {\n    border-color: #4c4e4f;\n}\n::placeholder {\n    color: #686663;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #464733 !important;\n    color: #797877 !important;\n}\n::selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}\n::-moz-selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #584c2c !important;\n    border-color: #746839 !important;\n    color: #7c796f !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #384449 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #343d3f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #363636 !important;\n}\n.tou-uknfeu {\n    background-color: #3d3a34 !important;\n}\n.tou-6i3zyv {\n    background-color: #3b4d53 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 477,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #39393a;\n   --darkreader-neutral-text: #747371;\n   --darkreader-selection-background: #334a66;\n   --darkreader-selection-text: #797877;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #3a3b3b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #3a3b3b;\n}\nhtml, body {\n    border-color: #56534f;\n    color: #797877;\n}\na {\n    color: #425f80;\n}\ntable {\n    border-color: #4c4e4f;\n}\n::placeholder {\n    color: #686663;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #464733 !important;\n    color: #797877 !important;\n}\n::selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}\n::-moz-selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #584c2c !important;\n    border-color: #746839 !important;\n    color: #7c796f !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #384449 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #343d3f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #363636 !important;\n}\n.tou-uknfeu {\n    background-color: #3d3a34 !important;\n}\n.tou-6i3zyv {\n    background-color: #3b4d53 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 478,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(50%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #39393a;\n   --darkreader-neutral-text: #747371;\n   --darkreader-selection-background: #334a66;\n   --darkreader-selection-text: #797877;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #3a3b3b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #3a3b3b;\n}\nhtml, body {\n    border-color: #56534f;\n    color: #797877;\n}\na {\n    color: #425f80;\n}\ntable {\n    border-color: #4c4e4f;\n}\n::placeholder {\n    color: #686663;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #464733 !important;\n    color: #797877 !important;\n}\n::selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}\n::-moz-selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #584c2c !important;\n    border-color: #746839 !important;\n    color: #7c796f !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #384449 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #343d3f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #363636 !important;\n}\n.tou-uknfeu {\n    background-color: #3d3a34 !important;\n}\n.tou-6i3zyv {\n    background-color: #3b4d53 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 479,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 480,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 481,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 482,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 483,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #3a3b3b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #3a3b3b;\n}\nhtml, body {\n    border-color: #56534f;\n    color: #797877;\n}\na {\n    color: #425f80;\n}\ntable {\n    border-color: #4c4e4f;\n}\n::placeholder {\n    color: #686663;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #464733 !important;\n    color: #797877 !important;\n}\n::selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}\n::-moz-selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 484,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #3a3b3b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #3a3b3b;\n}\nhtml, body {\n    border-color: #56534f;\n    color: #797877;\n}\na {\n    color: #425f80;\n}\ntable {\n    border-color: #4c4e4f;\n}\n::placeholder {\n    color: #686663;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #464733 !important;\n    color: #797877 !important;\n}\n::selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}\n::-moz-selection {\n    background-color: #334a66 !important;\n    color: #797877 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 485,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 486,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 487,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 488,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(50%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 489,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(50%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 490,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 491,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 492,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 493,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #584c2c !important;\n    border-color: #746839 !important;\n    color: #7c796f !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #384449 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #343d3f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #363636 !important;\n}\n.tou-uknfeu {\n    background-color: #3d3a34 !important;\n}\n.tou-6i3zyv {\n    background-color: #3b4d53 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 494,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #584c2c !important;\n    border-color: #746839 !important;\n    color: #7c796f !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #384449 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #343d3f !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #363636 !important;\n}\n.tou-uknfeu {\n    background-color: #3d3a34 !important;\n}\n.tou-6i3zyv {\n    background-color: #3b4d53 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 495,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 496,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #39393a;\n   --darkreader-neutral-text: #747371;\n   --darkreader-selection-background: #334a66;\n   --darkreader-selection-text: #797877;\n}</style>"
            }
        ]
    },
    {
        "mutation": 497,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #39393a;\n   --darkreader-neutral-text: #747371;\n   --darkreader-selection-background: #334a66;\n   --darkreader-selection-text: #797877;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 498,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 499,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 500,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 501,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 502,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 503,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #3f3f3f;\n   --darkreader-neutral-text: #757472;\n   --darkreader-selection-background: #394f68;\n   --darkreader-selection-text: #797978;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #404141 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #404141;\n}\nhtml, body {\n    border-color: #595753;\n    color: #797978;\n}\na {\n    color: #476180;\n}\ntable {\n    border-color: #505253;\n}\n::placeholder {\n    color: #6a6866;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b4c39 !important;\n    color: #797978 !important;\n}\n::selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}\n::-moz-selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5033 !important;\n    border-color: #756a3f !important;\n    color: #7c7970 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e494d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #3a4245 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #3c3c3c !important;\n}\n.tou-uknfeu {\n    background-color: #433f3a !important;\n}\n.tou-6i3zyv {\n    background-color: #405157 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 504,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #3f3f3f;\n   --darkreader-neutral-text: #757472;\n   --darkreader-selection-background: #394f68;\n   --darkreader-selection-text: #797978;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #404141 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #404141;\n}\nhtml, body {\n    border-color: #595753;\n    color: #797978;\n}\na {\n    color: #476180;\n}\ntable {\n    border-color: #505253;\n}\n::placeholder {\n    color: #6a6866;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b4c39 !important;\n    color: #797978 !important;\n}\n::selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}\n::-moz-selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5033 !important;\n    border-color: #756a3f !important;\n    color: #7c7970 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e494d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #3a4245 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #3c3c3c !important;\n}\n.tou-uknfeu {\n    background-color: #433f3a !important;\n}\n.tou-6i3zyv {\n    background-color: #405157 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 505,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(45%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #3f3f3f;\n   --darkreader-neutral-text: #757472;\n   --darkreader-selection-background: #394f68;\n   --darkreader-selection-text: #797978;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #404141 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #404141;\n}\nhtml, body {\n    border-color: #595753;\n    color: #797978;\n}\na {\n    color: #476180;\n}\ntable {\n    border-color: #505253;\n}\n::placeholder {\n    color: #6a6866;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b4c39 !important;\n    color: #797978 !important;\n}\n::selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}\n::-moz-selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5033 !important;\n    border-color: #756a3f !important;\n    color: #7c7970 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e494d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #3a4245 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #3c3c3c !important;\n}\n.tou-uknfeu {\n    background-color: #433f3a !important;\n}\n.tou-6i3zyv {\n    background-color: #405157 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 506,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 507,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 508,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 509,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 510,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #404141 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #404141;\n}\nhtml, body {\n    border-color: #595753;\n    color: #797978;\n}\na {\n    color: #476180;\n}\ntable {\n    border-color: #505253;\n}\n::placeholder {\n    color: #6a6866;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b4c39 !important;\n    color: #797978 !important;\n}\n::selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}\n::-moz-selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 511,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #404141 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #404141;\n}\nhtml, body {\n    border-color: #595753;\n    color: #797978;\n}\na {\n    color: #476180;\n}\ntable {\n    border-color: #505253;\n}\n::placeholder {\n    color: #6a6866;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #4b4c39 !important;\n    color: #797978 !important;\n}\n::selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}\n::-moz-selection {\n    background-color: #394f68 !important;\n    color: #797978 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 512,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 513,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 514,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 515,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(45%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 516,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(45%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 517,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 518,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 519,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 520,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5033 !important;\n    border-color: #756a3f !important;\n    color: #7c7970 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e494d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #3a4245 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #3c3c3c !important;\n}\n.tou-uknfeu {\n    background-color: #433f3a !important;\n}\n.tou-6i3zyv {\n    background-color: #405157 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 521,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5b5033 !important;\n    border-color: #756a3f !important;\n    color: #7c7970 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #3e494d !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #3a4245 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #3c3c3c !important;\n}\n.tou-uknfeu {\n    background-color: #433f3a !important;\n}\n.tou-6i3zyv {\n    background-color: #405157 !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 522,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 523,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #3f3f3f;\n   --darkreader-neutral-text: #757472;\n   --darkreader-selection-background: #394f68;\n   --darkreader-selection-text: #797978;\n}</style>"
            }
        ]
    },
    {
        "mutation": 524,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #3f3f3f;\n   --darkreader-neutral-text: #757472;\n   --darkreader-selection-background: #394f68;\n   --darkreader-selection-text: #797978;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 525,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 526,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 527,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 528,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 529,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 530,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #454545;\n   --darkreader-neutral-text: #767574;\n   --darkreader-selection-background: #40536a;\n   --darkreader-selection-text: #7a7979;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #464647 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #464647;\n}\nhtml, body {\n    border-color: #5d5b57;\n    color: #7a7979;\n}\na {\n    color: #4d6480;\n}\ntable {\n    border-color: #555757;\n}\n::placeholder {\n    color: #6c6a68;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #505140 !important;\n    color: #7a7979 !important;\n}\n::selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}\n::-moz-selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5f553a !important;\n    border-color: #766c44 !important;\n    color: #7c7a72 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #444e52 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #41484a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #424242 !important;\n}\n.tou-uknfeu {\n    background-color: #484540 !important;\n}\n.tou-6i3zyv {\n    background-color: #46565b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 531,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #454545;\n   --darkreader-neutral-text: #767574;\n   --darkreader-selection-background: #40536a;\n   --darkreader-selection-text: #7a7979;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #464647 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #464647;\n}\nhtml, body {\n    border-color: #5d5b57;\n    color: #7a7979;\n}\na {\n    color: #4d6480;\n}\ntable {\n    border-color: #555757;\n}\n::placeholder {\n    color: #6c6a68;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #505140 !important;\n    color: #7a7979 !important;\n}\n::selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}\n::-moz-selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5f553a !important;\n    border-color: #766c44 !important;\n    color: #7c7a72 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #444e52 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #41484a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #424242 !important;\n}\n.tou-uknfeu {\n    background-color: #484540 !important;\n}\n.tou-6i3zyv {\n    background-color: #46565b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 532,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-scheme=\"dark\" data-darkreader-mode=\"dynamic\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\"></style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(40%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #454545;\n   --darkreader-neutral-text: #767574;\n   --darkreader-selection-background: #40536a;\n   --darkreader-selection-text: #7a7979;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #464647 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #464647;\n}\nhtml, body {\n    border-color: #5d5b57;\n    color: #7a7979;\n}\na {\n    color: #4d6480;\n}\ntable {\n    border-color: #555757;\n}\n::placeholder {\n    color: #6c6a68;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #505140 !important;\n    color: #7a7979 !important;\n}\n::selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}\n::-moz-selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"c9e3dba9b904427ab1e2ae9099911c86\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5f553a !important;\n    border-color: #766c44 !important;\n    color: #7c7a72 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #444e52 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #41484a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #424242 !important;\n}\n.tou-uknfeu {\n    background-color: #484540 !important;\n}\n.tou-6i3zyv {\n    background-color: #46565b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 533,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": []
    },
    {
        "mutation": 534,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 535,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 536,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 537,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #464647 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #464647;\n}\nhtml, body {\n    border-color: #5d5b57;\n    color: #7a7979;\n}\na {\n    color: #4d6480;\n}\ntable {\n    border-color: #555757;\n}\n::placeholder {\n    color: #6c6a68;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #505140 !important;\n    color: #7a7979 !important;\n}\n::selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}\n::-moz-selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 538,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #464647 !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #464647;\n}\nhtml, body {\n    border-color: #5d5b57;\n    color: #7a7979;\n}\na {\n    color: #4d6480;\n}\ntable {\n    border-color: #555757;\n}\n::placeholder {\n    color: #6c6a68;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #505140 !important;\n    color: #7a7979 !important;\n}\n::selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}\n::-moz-selection {\n    background-color: #40536a !important;\n    color: #7a7979 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 539,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 540,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 541,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 542,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(40%) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 543,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) brightness(50%) contrast(40%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 544,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 545,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 546,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 547,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5f553a !important;\n    border-color: #766c44 !important;\n    color: #7c7a72 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #444e52 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #41484a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #424242 !important;\n}\n.tou-uknfeu {\n    background-color: #484540 !important;\n}\n.tou-6i3zyv {\n    background-color: #46565b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ]
    },
    {
        "mutation": 548,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #5f553a !important;\n    border-color: #766c44 !important;\n    color: #7c7a72 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #444e52 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #41484a !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #424242 !important;\n}\n.tou-uknfeu {\n    background-color: #484540 !important;\n}\n.tou-6i3zyv {\n    background-color: #46565b !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 549,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 550,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #454545;\n   --darkreader-neutral-text: #767574;\n   --darkreader-selection-background: #40536a;\n   --darkreader-selection-text: #7a7979;\n}</style>"
            }
        ]
    },
    {
        "mutation": 551,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #454545;\n   --darkreader-neutral-text: #767574;\n   --darkreader-selection-background: #40536a;\n   --darkreader-selection-text: #7a7979;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 552,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ]
    },
    {
        "mutation": 553,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 554,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 555,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 556,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    }
]