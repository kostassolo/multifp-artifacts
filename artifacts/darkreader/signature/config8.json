[
    {
        "mutation": 1,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<meta name=\"darkreader\" content=\"b269b55c2a38488d972b055737f3e70a\">"
            }
        ],
        "removed": []
    },
    {
        "mutation": 2,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-mode=\"dynamic\" data-darkreader-scheme=\"dark\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\">html, body, body :not(iframe) {\n    background-color: #181a1b !important;\n    border-color: #776e62 !important;\n    color: #e8e6e3 !important;\n}\ndiv[style*=\"background-color: rgb(135, 135, 135)\"] {\n    background-color: #878787 !important;\n}</style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"b269b55c2a38488d972b055737f3e70a\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 3,
        "type": "attributes",
        "target": {
            "id": "",
            "outerHTML": "<html lang=\"en\" data-darkreader-mode=\"dynamic\" data-darkreader-scheme=\"dark\"><head><style class=\"darkreader darkreader--fallback\" media=\"screen\">html, body, body :not(iframe) {\n    background-color: #181a1b !important;\n    border-color: #776e62 !important;\n    color: #e8e6e3 !important;\n}\ndiv[style*=\"background-color: rgb(135, 135, 135)\"] {\n    background-color: #878787 !important;\n}</style><style class=\"darkreader darkreader--text\" media=\"screen\"></style><style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style><style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style><style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style><style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style><style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Simplehoneypage</title><meta name=\"darkreader\" content=\"b269b55c2a38488d972b055737f3e70a\"><style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style></head><body><h1 id=\"header\">Content for extension testing.</h1><p id=\"paragraph1\">This is the content of the page</p><div id=\"mainContent\"><p id=\"innerParagraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p></div><img src=\"image.png\" alt=\"Image\" height=\"100\" width=\"100\"><script>myMutations=[];var mutationCount=0;var observer=new MutationObserver(function(e){mutationCount++;if(mutationCount===1)return;e.forEach(function(e){console.log(e);var t={};if(\"attributes\"==e.type){t.type=\"attributes\";var r={id:e.target.id,outerHTML:e.target.outerHTML};t.target=r,myMutations.push(JSON.stringify(t))}if(\"childList\"==e.type){var o=[],d=[];if(t.type=\"childList\",0<e.addedNodes.length)for(var a=0;a<e.addedNodes.length;a++){var i={id:(s=e.addedNodes[a]).id,outerHTML:s.outerHTML};o.push(i)}if(0<e.removedNodes.length)for(a=0;a<e.removedNodes.length;a++){var s;i={id:(s=e.removedNodes[a]).id,outerHTML:s.outerHTML};d.push(i)}t.target=e.target.id,t.added=o,t.removed=d,myMutations.push(JSON.stringify(t))}})}),container=document.documentElement||document.body,config={childList:!0,attributes:!0,characterData:!0,subtree:!0,attributeOldValue:!1,characterDataOldValue:!0};observer.observe(container,config)</script>\n</body></html>"
        }
    },
    {
        "mutation": 4,
        "type": "childList",
        "target": "",
        "added": [
            {}
        ],
        "removed": [
            {}
        ]
    },
    {
        "mutation": 5,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\">html, body, body :not(iframe) {\n    background-color: #181a1b !important;\n    border-color: #776e62 !important;\n    color: #e8e6e3 !important;\n}\ndiv[style*=\"background-color: rgb(135, 135, 135)\"] {\n    background-color: #878787 !important;\n}</style>"
            }
        ]
    },
    {
        "mutation": 6,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--fallback\" media=\"screen\">html, body, body :not(iframe) {\n    background-color: #181a1b !important;\n    border-color: #776e62 !important;\n    color: #e8e6e3 !important;\n}\ndiv[style*=\"background-color: rgb(135, 135, 135)\"] {\n    background-color: #878787 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 7,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--user-agent\" media=\"screen\">html {\n    background-color: #181a1b !important;\n}\nhtml {\n    color-scheme: dark !important;\n}\nhtml, body {\n    background-color: #181a1b;\n}\nhtml, body {\n    border-color: #736b5e;\n    color: #e8e6e3;\n}\na {\n    color: #3391ff;\n}\ntable {\n    border-color: #545b5e;\n}\n::placeholder {\n    color: #b2aba1;\n}\ninput:-webkit-autofill,\ntextarea:-webkit-autofill,\nselect:-webkit-autofill {\n    background-color: #404400 !important;\n    color: #e8e6e3 !important;\n}\n::selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}\n::-moz-selection {\n    background-color: #004daa !important;\n    color: #e8e6e3 !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 8,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--text\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 9,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--invert\" media=\"screen\">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^=\"https://www.gstatic.com/images/branding/googlelogo\"], span[data-href^=\"https://www.hcaptcha.com/\"] > #icon, #bit-notification-bar-iframe, ::-webkit-calendar-picker-indicator, img.Wirisformula {\n    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 10,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--inline\" media=\"screen\">[data-darkreader-inline-bgcolor] {\n  background-color: var(--darkreader-inline-bgcolor) !important;\n}\n[data-darkreader-inline-bgimage] {\n  background-image: var(--darkreader-inline-bgimage) !important;\n}\n[data-darkreader-inline-border] {\n  border-color: var(--darkreader-inline-border) !important;\n}\n[data-darkreader-inline-border-bottom] {\n  border-bottom-color: var(--darkreader-inline-border-bottom) !important;\n}\n[data-darkreader-inline-border-left] {\n  border-left-color: var(--darkreader-inline-border-left) !important;\n}\n[data-darkreader-inline-border-right] {\n  border-right-color: var(--darkreader-inline-border-right) !important;\n}\n[data-darkreader-inline-border-top] {\n  border-top-color: var(--darkreader-inline-border-top) !important;\n}\n[data-darkreader-inline-boxshadow] {\n  box-shadow: var(--darkreader-inline-boxshadow) !important;\n}\n[data-darkreader-inline-color] {\n  color: var(--darkreader-inline-color) !important;\n}\n[data-darkreader-inline-fill] {\n  fill: var(--darkreader-inline-fill) !important;\n}\n[data-darkreader-inline-stroke] {\n  stroke: var(--darkreader-inline-stroke) !important;\n}\n[data-darkreader-inline-outline] {\n  outline-color: var(--darkreader-inline-outline) !important;\n}\n[data-darkreader-inline-stopcolor] {\n  stop-color: var(--darkreader-inline-stopcolor) !important;\n}\n[data-darkreader-inline-bg] {\n  background: var(--darkreader-inline-bg) !important;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 11,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--override\" media=\"screen\">.vimvixen-hint {\n    background-color: #7b5300 !important;\n    border-color: #d8b013 !important;\n    color: #f3e8c8 !important;\n}\n#vimvixen-console-frame {\n    color-scheme: light !important;\n}\n::placeholder {\n    opacity: 0.5 !important;\n}\n#edge-translate-panel-body,\n.MuiTypography-body1,\n.nfe-quote-text {\n    color: var(--darkreader-neutral-text) !important;\n}\ngr-main-header {\n    background-color: #0f3a48 !important;\n}\n.tou-z65h9k,\n.tou-mignzq,\n.tou-1b6i2ox,\n.tou-lnqlqk {\n    background-color: var(--darkreader-neutral-background) !important;\n}\n.tou-75mvi {\n    background-color: #032029 !important;\n}\n.tou-ta9e87,\n.tou-1w3fhi0,\n.tou-1b8t2us,\n.tou-py7lfi,\n.tou-1lpmd9d,\n.tou-1frrtv8,\n.tou-17ezmgn {\n    background-color: #0a0a0a !important;\n}\n.tou-uknfeu {\n    background-color: #231603 !important;\n}\n.tou-6i3zyv {\n    background-color: #19576c !important;\n}\ndiv.mermaid-viewer-control-panel .btn {\n    background-color: var(--darkreader-neutral-background);\n    fill: var(--darkreader-neutral-text);\n}\nsvg g rect.er {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.entityBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxOdd {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.er.attributeBoxEven {\n    fill: var(--darkreader-selection-background);\n    fill-opacity: 0.8 !important;\n}\nsvg rect.er.relationshipLabelBox {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g g.nodes rect,\nsvg g g.nodes polygon {\n    fill: var(--darkreader-neutral-background) !important;\n}\nsvg g rect.task {\n    fill: var(--darkreader-selection-background) !important;\n}\nsvg line.messageLine0,\nsvg line.messageLine1 {\n    stroke: var(--darkreader-neutral-text) !important;\n}\ndiv.mermaid .actor {\n    fill: var(--darkreader-neutral-background) !important;\n}\n.google-material-icons {\n    font-family: 'Google Material Icons' !important;\n}\n.google-symbols {\n    font-family: 'Google Symbols Subset', 'Google Symbols' !important;\n}\n.material-icons-extended {\n    font-family: 'Material Icons Extended' !important;\n}\nmitid-authenticators-code-app > .code-app-container {\n    background-color: white !important;\n    padding-top: 1rem;\n}\niframe#unpaywall[src$=\"unpaywall.html\"] {\n    color-scheme: light !important;\n}\n.oui-icon {\n    font-family: 'Oui Icons' !important;\n}\nembed[type=\"application/pdf\"][src=\"about:blank\"] { filter: invert(100%) contrast(90%); }</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 12,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--variables\" media=\"screen\">:root {\n   --darkreader-neutral-background: #131516;\n   --darkreader-neutral-text: #d8d4cf;\n   --darkreader-selection-background: #004daa;\n   --darkreader-selection-text: #e8e6e3;\n}</style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 13,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<style class=\"darkreader darkreader--root-vars\" media=\"screen\"></style>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 14,
        "type": "childList",
        "target": "",
        "added": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ],
        "removed": []
    },
    {
        "mutation": 15,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {
                "id": "",
                "outerHTML": "<script class=\"darkreader darkreader--proxy\">(function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        const cleaners = [];\r\n        function cleanUp() {\r\n            cleaners.forEach((clean) => clean());\r\n            cleaners.splice(0);\r\n        }\r\n        function documentEventListener(type, listener, options) {\r\n            document.addEventListener(type, listener, options);\r\n            cleaners.push(() => document.removeEventListener(type, listener));\r\n        }\r\n        documentEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n        function overrideProperty(cls, prop, overrides) {\r\n            const proto = cls.prototype;\r\n            const oldDescriptor = Object.getOwnPropertyDescriptor(proto, prop);\r\n            const newDescriptor = {...oldDescriptor};\r\n            Object.keys(overrides).forEach((key) => {\r\n                const factory = overrides[key];\r\n                newDescriptor[key] = factory(oldDescriptor[key]);\r\n            });\r\n            Object.defineProperty(proto, prop, newDescriptor);\r\n            cleaners.push(() =>\r\n                Object.defineProperty(proto, prop, oldDescriptor)\r\n            );\r\n        }\r\n        function override(cls, prop, factory) {\r\n            overrideProperty(cls, prop, {value: factory});\r\n        }\r\n        function isDRElement(element) {\r\n            var _a;\r\n            return (_a =\r\n                element === null || element === void 0\r\n                    ? void 0\r\n                    : element.classList) === null || _a === void 0\r\n                ? void 0\r\n                : _a.contains(\"darkreader\");\r\n        }\r\n        function isDRSheet(sheet) {\r\n            return isDRElement(sheet.ownerNode);\r\n        }\r\n        const updateSheetEvent = new CustomEvent(\"__darkreader__updateSheet\");\r\n        const adoptedSheetChangeEvent = new CustomEvent(\r\n            \"__darkreader__adoptedStyleSheetChange\"\r\n        );\r\n        const adoptedSheetOwners = new WeakMap();\r\n        const adoptedDeclarationSheets = new WeakMap();\r\n        function onAdoptedSheetChange(sheet) {\r\n            const owners = adoptedSheetOwners.get(sheet);\r\n            owners === null || owners === void 0\r\n                ? void 0\r\n                : owners.forEach((node) => {\r\n                      if (node.isConnected) {\r\n                          node.dispatchEvent(adoptedSheetChangeEvent);\r\n                      } else {\r\n                          owners.delete(node);\r\n                      }\r\n                  });\r\n        }\r\n        function reportSheetChange(sheet) {\r\n            if (sheet.ownerNode && !isDRSheet(sheet)) {\r\n                sheet.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                onAdoptedSheetChange(sheet);\r\n            }\r\n        }\r\n        function reportSheetChangeAsync(sheet, promise) {\r\n            const {ownerNode} = sheet;\r\n            if (\r\n                ownerNode &&\r\n                !isDRSheet(sheet) &&\r\n                promise &&\r\n                promise instanceof Promise\r\n            ) {\r\n                promise.then(() => ownerNode.dispatchEvent(updateSheetEvent));\r\n            }\r\n            if (adoptedSheetOwners.has(sheet)) {\r\n                if (promise && promise instanceof Promise) {\r\n                    promise.then(() => onAdoptedSheetChange(sheet));\r\n                }\r\n            }\r\n        }\r\n        override(\r\n            CSSStyleSheet,\r\n            \"addRule\",\r\n            (native) =>\r\n                function (selector, style, index) {\r\n                    native.call(this, selector, style, index);\r\n                    reportSheetChange(this);\r\n                    return -1;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"insertRule\",\r\n            (native) =>\r\n                function (rule, index) {\r\n                    const returnValue = native.call(this, rule, index);\r\n                    reportSheetChange(this);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"deleteRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"removeRule\",\r\n            (native) =>\r\n                function (index) {\r\n                    native.call(this, index);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replace\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    const returnValue = native.call(this, cssText);\r\n                    reportSheetChangeAsync(this, returnValue);\r\n                    return returnValue;\r\n                }\r\n        );\r\n        override(\r\n            CSSStyleSheet,\r\n            \"replaceSync\",\r\n            (native) =>\r\n                function (cssText) {\r\n                    native.call(this, cssText);\r\n                    reportSheetChange(this);\r\n                }\r\n        );\r\n        const shouldWrapHTMLElement =\r\n            location.hostname === \"baidu.com\" ||\r\n            location.hostname.endsWith(\".baidu.com\");\r\n        if (shouldWrapHTMLElement) {\r\n            override(\r\n                Element,\r\n                \"getElementsByTagName\",\r\n                (native) =>\r\n                    function (tagName) {\r\n                        if (tagName !== \"style\") {\r\n                            return native.call(this, tagName);\r\n                        }\r\n                        const getCurrentElementValue = () => {\r\n                            const elements = native.call(this, tagName);\r\n                            return Object.setPrototypeOf(\r\n                                [...elements].filter(\r\n                                    (element) =>\r\n                                        element && !isDRElement(element)\r\n                                ),\r\n                                NodeList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentElementValue();\r\n                        const nodeListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentElementValue()[\r\n                                    Number(property) || property\r\n                                ];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, nodeListBehavior);\r\n                        return elements;\r\n                    }\r\n            );\r\n        }\r\n        const shouldProxyChildNodes = [\"brilliant.org\", \"www.vy.no\"].includes(\r\n            location.hostname\r\n        );\r\n        if (shouldProxyChildNodes) {\r\n            overrideProperty(Node, \"childNodes\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const childNodes = native.call(this);\r\n                        return Object.setPrototypeOf(\r\n                            [...childNodes].filter((element) => {\r\n                                return !isDRElement(element);\r\n                            }),\r\n                            NodeList.prototype\r\n                        );\r\n                    }\r\n            });\r\n        }\r\n        function resolveCustomElement(tag) {\r\n            customElements.whenDefined(tag).then(() => {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {detail: {tag}})\r\n                );\r\n            });\r\n        }\r\n        documentEventListener(\"__darkreader__addUndefinedResolver\", (e) =>\r\n            resolveCustomElement(e.detail.tag)\r\n        );\r\n        if (enableCustomElementRegistryProxy) {\r\n            override(\r\n                CustomElementRegistry,\r\n                \"define\",\r\n                (native) =>\r\n                    function (name, constructor, options) {\r\n                        resolveCustomElement(name);\r\n                        native.call(this, name, constructor, options);\r\n                    }\r\n            );\r\n        }\r\n        async function checkBlobURLSupport() {\r\n            const svg =\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n            const bytes = new Uint8Array(svg.length);\r\n            for (let i = 0; i < svg.length; i++) {\r\n                bytes[i] = svg.charCodeAt(i);\r\n            }\r\n            const blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n            const objectURL = URL.createObjectURL(blob);\r\n            let blobURLAllowed;\r\n            try {\r\n                const image = new Image();\r\n                await new Promise((resolve, reject) => {\r\n                    image.onload = () => resolve();\r\n                    image.onerror = () => reject();\r\n                    image.src = objectURL;\r\n                });\r\n                blobURLAllowed = true;\r\n            } catch (err) {\r\n                blobURLAllowed = false;\r\n            }\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__blobURLCheckResponse\", {\r\n                    detail: {blobURLAllowed}\r\n                })\r\n            );\r\n        }\r\n        documentEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            overrideProperty(Document, \"styleSheets\", {\r\n                get: (native) =>\r\n                    function () {\r\n                        const getCurrentValue = () => {\r\n                            const docSheets = native.call(this);\r\n                            const filteredSheets = [...docSheets].filter(\r\n                                (styleSheet) =>\r\n                                    styleSheet.ownerNode &&\r\n                                    !isDRSheet(styleSheet)\r\n                            );\r\n                            filteredSheets.item = (item) =>\r\n                                filteredSheets[item];\r\n                            return Object.setPrototypeOf(\r\n                                filteredSheets,\r\n                                StyleSheetList.prototype\r\n                            );\r\n                        };\r\n                        let elements = getCurrentValue();\r\n                        const styleSheetListBehavior = {\r\n                            get: function (_, property) {\r\n                                return getCurrentValue()[property];\r\n                            }\r\n                        };\r\n                        elements = new Proxy(elements, styleSheetListBehavior);\r\n                        return elements;\r\n                    }\r\n            });\r\n        }\r\n        {\r\n            const adoptedSheetsSourceProxies = new WeakMap();\r\n            const adoptedSheetsProxySources = new WeakMap();\r\n            const adoptedSheetsChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleSheetsChange\"\r\n            );\r\n            const adoptedSheetOverrideCache = new WeakSet();\r\n            const adoptedSheetsSnapshots = new WeakMap();\r\n            const isDRAdoptedSheetOverride = (sheet) => {\r\n                if (!sheet || !sheet.cssRules) {\r\n                    return false;\r\n                }\r\n                if (adoptedSheetOverrideCache.has(sheet)) {\r\n                    return true;\r\n                }\r\n                if (\r\n                    sheet.cssRules.length > 0 &&\r\n                    sheet.cssRules[0].cssText.startsWith(\r\n                        \"#__darkreader__adoptedOverride\"\r\n                    )\r\n                ) {\r\n                    adoptedSheetOverrideCache.add(sheet);\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            const areArraysEqual = (a, b) => {\r\n                return a.length === b.length && a.every((x, i) => x === b[i]);\r\n            };\r\n            const onAdoptedSheetsChange = (node) => {\r\n                const prev = adoptedSheetsSnapshots.get(node);\r\n                const curr = (node.adoptedStyleSheets || []).filter(\r\n                    (s) => !isDRAdoptedSheetOverride(s)\r\n                );\r\n                adoptedSheetsSnapshots.set(node, curr);\r\n                if (!prev || !areArraysEqual(prev, curr)) {\r\n                    curr.forEach((sheet) => {\r\n                        if (!adoptedSheetOwners.has(sheet)) {\r\n                            adoptedSheetOwners.set(sheet, new Set());\r\n                        }\r\n                        adoptedSheetOwners.get(sheet).add(node);\r\n                        for (const rule of sheet.cssRules) {\r\n                            const declaration = rule.style;\r\n                            if (declaration) {\r\n                                adoptedDeclarationSheets.set(\r\n                                    declaration,\r\n                                    sheet\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                    node.dispatchEvent(adoptedSheetsChangeEvent);\r\n                }\r\n            };\r\n            const proxyAdoptedSheetsArray = (node, source) => {\r\n                if (adoptedSheetsProxySources.has(source)) {\r\n                    return source;\r\n                }\r\n                if (adoptedSheetsSourceProxies.has(source)) {\r\n                    return adoptedSheetsSourceProxies.get(source);\r\n                }\r\n                const proxy = new Proxy(source, {\r\n                    deleteProperty(target, property) {\r\n                        delete target[property];\r\n                        return true;\r\n                    },\r\n                    set(target, property, value) {\r\n                        target[property] = value;\r\n                        if (property === \"length\") {\r\n                            onAdoptedSheetsChange(node);\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n                adoptedSheetsSourceProxies.set(source, proxy);\r\n                adoptedSheetsProxySources.set(proxy, source);\r\n                return proxy;\r\n            };\r\n            [Document, ShadowRoot].forEach((ctor) => {\r\n                overrideProperty(ctor, \"adoptedStyleSheets\", {\r\n                    get: (native) =>\r\n                        function () {\r\n                            const source = native.call(this);\r\n                            return proxyAdoptedSheetsArray(this, source);\r\n                        },\r\n                    set: (native) =>\r\n                        function (source) {\r\n                            if (adoptedSheetsProxySources.has(source)) {\r\n                                source = adoptedSheetsProxySources.get(source);\r\n                            }\r\n                            native.call(this, source);\r\n                            onAdoptedSheetsChange(this);\r\n                        }\r\n                });\r\n            });\r\n            const adoptedDeclarationChangeEvent = new CustomEvent(\r\n                \"__darkreader__adoptedStyleDeclarationChange\"\r\n            );\r\n            [\"setProperty\", \"removeProperty\"].forEach((key) => {\r\n                override(CSSStyleDeclaration, key, (native) => {\r\n                    return function (...args) {\r\n                        const returnValue = native.apply(this, args);\r\n                        const sheet = adoptedDeclarationSheets.get(this);\r\n                        if (sheet) {\r\n                            const owners = adoptedSheetOwners.get(sheet);\r\n                            if (owners) {\r\n                                owners.forEach((node) => {\r\n                                    node.dispatchEvent(\r\n                                        adoptedDeclarationChangeEvent\r\n                                    );\r\n                                });\r\n                            }\r\n                        }\r\n                        return returnValue;\r\n                    };\r\n                });\r\n            });\r\n        }\r\n    })(true, true)</script>"
            }
        ]
    },
    {
        "mutation": 16,
        "type": "childList",
        "target": "",
        "added": [],
        "removed": [
            {}
        ]
    }
]